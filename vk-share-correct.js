// –ü–û–õ–ù–û–°–¢–¨–Æ –ü–ï–†–ï–ü–ò–°–ê–ù–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –®–ï–†–ò–ù–ì–ê –ë–ï–ó –°–°–´–õ–û–ö
// –ó–∞–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é shareResults –≤ app.js –Ω–∞ —ç—Ç—É:

function shareResults() {
    console.log('üì§ –ù–û–í–ê–Ø —Å–∏—Å—Ç–µ–º–∞ —à–µ—Ä–∏–Ω–≥–∞ - –ë–ï–ó —Å—Å—ã–ª–æ–∫ –Ω–∞ GitHub');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const percentage = Math.round((score / questionsForQuiz.length) * 100);
    const correctAnswers = score;
    const totalQuestions = questionsForQuiz.length;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º
    let modeText = '–ê–Ω–∞—Ç–æ–º–∏—è';
    switch(currentQuizMode) {
        case 'clinical': modeText = '–ö–ª–∏–Ω–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ'; break;
        case 'pharmacology': modeText = '–§–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è'; break;
        case 'first_aid': modeText = '–ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å'; break;
        case 'obstetrics': modeText = '–ê–∫—É—à–µ—Ä—Å—Ç–≤–æ'; break;
        case 'expert': modeText = 'üß† –≠–ö–°–ü–ï–†–¢–ù–´–ô –£–†–û–í–ï–ù–¨'; break;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å
    const difficultyText = currentQuizMode === 'expert' ? '—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å' : 
                          (currentDifficulty === 'hard' ? '—Å–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å' : '–æ–±—ã—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –ë–ï–ó –ø—Ä–∏–∑—ã–≤–∞ –∫ –¥–µ–π—Å—Ç–≤–∏—é —Å —Å—Å—ã–ª–∫–æ–π
    const shareText = createCleanShareText(percentage, correctAnswers, totalQuestions, modeText, difficultyText);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å VK Bridge
    const bridge = getBridgeInstance();
    
    if (!bridge) {
        console.warn('VK Bridge –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ');
        showCopyOnlyModal(shareText);
        return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —à–µ—Ä–∏–Ω–≥–∞
    showCleanShareModal(shareText, percentage, bridge);
}

// –°–æ–∑–¥–∞–Ω–∏–µ —á–∏—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –±–µ–∑ —Å—Å—ã–ª–æ–∫
function createCleanShareText(percentage, correct, total, mode, difficulty) {
    const emoji = getResultEmoji(percentage);
    const grade = getResultGrade(percentage);
    const motivation = getCleanMotivation(percentage);
    
    return `${emoji} ${grade}! –ü—Ä–æ—à–µ–ª –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–≤–∏–∑ –∏ –Ω–∞–±—Ä–∞–ª ${percentage}%!

‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${correct} –∏–∑ ${total}
üìã –†–µ–∂–∏–º: ${mode}
üéØ –£—Ä–æ–≤–µ–Ω—å: ${difficulty}

${motivation}

üí™ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è - —ç—Ç–æ —Å–∏–ª–∞!`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ VK Bridge
function getBridgeInstance() {
    return window.vkBridgeInstance || 
           window.vkBridge || 
           (typeof vkBridge !== 'undefined' ? vkBridge : null);
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —á–∏—Å—Ç—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —à–µ—Ä–∏–Ω–≥–∞
function showCleanShareModal(shareText, percentage, bridge) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    const existingModals = document.querySelectorAll('.share-modal');
    existingModals.forEach(modal => modal.remove());
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'share-modal';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.85);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        backdrop-filter: blur(8px);
        animation: modalFadeIn 0.3s ease-out;
    `;
    
    const dialog = document.createElement('div');
    dialog.style.cssText = `
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        border-radius: 24px;
        padding: 32px;
        max-width: 380px;
        width: 90%;
        text-align: center;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
        border: 1px solid rgba(255, 255, 255, 0.3);
        position: relative;
        animation: modalSlideIn 0.4s ease-out;
    `;
    
    const resultEmoji = getResultEmoji(percentage);
    
    dialog.innerHTML = `
        <div style="margin-bottom: 28px;">
            <div style="font-size: 64px; margin-bottom: 12px; filter: drop-shadow(0 4px 8px rgba(0,0,0,0.1));">
                ${resultEmoji}
            </div>
            <h3 style="margin: 0 0 8px 0; color: #1a202c; font-size: 24px; font-weight: 700;">
                –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            </h3>
            <div style="font-size: 36px; font-weight: 800; color: #059669; margin: 8px 0;">
                ${percentage}%
            </div>
            <p style="color: #64748b; margin: 0; font-size: 15px;">
                ${score} –∏–∑ ${questionsForQuiz.length} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
            </p>
        </div>
        
        <div style="display: flex; flex-direction: column; gap: 14px; margin-bottom: 24px;">
            <button id="clean-share-message" style="
                padding: 16px 24px;
                background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
                color: white;
                border: none;
                border-radius: 16px;
                font-size: 16px;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
            " onmouseover="this.style.transform='translateY(-2px)'" onmouseout="this.style.transform='translateY(0)'">
                üí¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–∑—å—è–º
            </button>
            
            <button id="clean-share-wall" style="
                padding: 16px 24px;
                background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
                color: white;
                border: none;
                border-radius: 16px;
                font-size: 16px;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 12px rgba(139, 92, 246, 0.4);
            " onmouseover="this.style.transform='translateY(-2px)'" onmouseout="this.style.transform='translateY(0)'">
                üìù –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–∞ —Å—Ç–µ–Ω–µ
            </button>
            
            <button id="clean-copy-text" style="
                padding: 14px 24px;
                background: #f1f5f9;
                color: #475569;
                border: 2px solid #e2e8f0;
                border-radius: 16px;
                font-size: 15px;
                font-weight: 500;
                cursor: pointer;
                transition: all 0.3s ease;
            " onmouseover="this.style.background='#e2e8f0'" onmouseout="this.style.background='#f1f5f9'">
                üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç
            </button>
        </div>
        
        <button id="clean-close-modal" style="
            width: 100%;
            padding: 12px;
            background: #6b7280;
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
        " onmouseover="this.style.background='#4b5563'" onmouseout="this.style.background='#6b7280'">
            –ó–∞–∫—Ä—ã—Ç—å
        </button>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    addModalStyles();
    
    modal.appendChild(dialog);
    document.body.appendChild(modal);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    dialog.querySelector('#clean-share-message').onclick = () => {
        closeCleanModal(modal);
        shareVKMessage(shareText, bridge);
    };
    
    dialog.querySelector('#clean-share-wall').onclick = () => {
        closeCleanModal(modal);
        shareVKWall(shareText, bridge);
    };
    
    dialog.querySelector('#clean-copy-text').onclick = () => {
        closeCleanModal(modal);
        copyCleanText(shareText);
    };
    
    dialog.querySelector('#clean-close-modal').onclick = () => {
        closeCleanModal(modal);
    };
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
    modal.onclick = (e) => {
        if (e.target === modal) {
            closeCleanModal(modal);
        }
    };
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ VK (–ë–ï–ó —Å—Å—ã–ª–æ–∫)
async function shareVKMessage(text, bridge) {
    console.log('üí¨ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ VK –ë–ï–ó —Å—Å—ã–ª–æ–∫');
    
    try {
        const result = await bridge.send('VKWebAppShare', {
            text: text
            // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ù–ï –ø–µ—Ä–µ–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä link!
        });
        
        console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', result);
        
        if (result && result.type === 'message') {
            const count = result.users ? result.users.length : 1;
            showCleanNotification(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${count > 1 ? count + ' –¥—Ä—É–∑—å—è–º' : '–¥—Ä—É–≥—É'}!`);
        } else {
            showCleanNotification('üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
        }
        
        // –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —à–µ—Ä–∏–Ω–≥
        rewardSharing();
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        
        if (error.error_type === 'client_error' && error.error_data?.error_reason === 'User denied') {
            showCleanNotification('‚ÑπÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞');
        } else {
            showCleanNotification('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç.');
            setTimeout(() => copyCleanText(text), 1500);
        }
    }
}

// –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ —Å—Ç–µ–Ω–µ VK (–ë–ï–ó —Å—Å—ã–ª–æ–∫)
async function shareVKWall(text, bridge) {
    console.log('üìù –ü—É–±–ª–∏–∫—É–µ–º –Ω–∞ —Å—Ç–µ–Ω–µ VK –ë–ï–ó —Å—Å—ã–ª–æ–∫');
    
    try {
        const result = await bridge.send('VKWebAppShowWallPostBox', {
            message: text
            // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ù–ï –ø–µ—Ä–µ–¥–∞–µ–º attachment –∏–ª–∏ link!
        });
        
        console.log('‚úÖ –ó–∞–ø–∏—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞:', result);
        
        if (result && result.post_id) {
            showCleanNotification('üìù –ó–∞–ø–∏—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –Ω–∞ —Å—Ç–µ–Ω–µ!');
        } else {
            showCleanNotification('üìù –†–µ–¥–∞–∫—Ç–æ—Ä –∑–∞–ø–∏—Å–∏ –æ—Ç–∫—Ä—ã—Ç!');
        }
        
        // –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —à–µ—Ä–∏–Ω–≥
        rewardSharing();
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:', error);
        
        if (error.error_type === 'client_error' && error.error_data?.error_reason === 'User denied') {
            showCleanNotification('‚ÑπÔ∏è –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
        } else {
            showCleanNotification('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç.');
            setTimeout(() => copyCleanText(text), 1500);
        }
    }
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyCleanText(text) {
    console.log('üìã –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
    
    try {
        if (navigator.clipboard && window.isSecureContext) {
            navigator.clipboard.writeText(text).then(() => {
                showCleanNotification('üìã –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            }).catch(() => {
                fallbackCopyText(text);
            });
        } else {
            fallbackCopyText(text);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        fallbackCopyText(text);
    }
}

// –†–µ–∑–µ—Ä–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
function fallbackCopyText(text) {
    try {
        const textArea = document.createElement('textarea');
        textArea.value = text;
        textArea.style.position = 'fixed';
        textArea.style.left = '-9999px';
        textArea.style.top = '-9999px';
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        
        const successful = document.execCommand('copy');
        document.body.removeChild(textArea);
        
        if (successful) {
            showCleanNotification('üìã –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
        } else {
            showCopyOnlyModal(text);
        }
    } catch (error) {
        console.error('–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å:', error);
        showCopyOnlyModal(text);
    }
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è (fallback)
function showCopyOnlyModal(text) {
    const modal = document.createElement('div');
    modal.className = 'share-modal';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.85);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        animation: modalFadeIn 0.3s ease-out;
    `;
    
    const dialog = document.createElement('div');
    dialog.style.cssText = `
        background: white;
        border-radius: 20px;
        padding: 30px;
        max-width: 420px;
        width: 90%;
        text-align: center;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        animation: modalSlideIn 0.4s ease-out;
    `;
    
    dialog.innerHTML = `
        <h3 style="margin: 0 0 20px 0; color: #333; font-size: 22px;">üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º</h3>
        <p style="color: #666; margin-bottom: 18px; line-height: 1.5;">
            –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–º –≤ VK –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö:
        </p>
        <textarea readonly id="share-textarea" style="
            width: 100%; 
            height: 140px; 
            padding: 16px; 
            border: 2px solid #e2e8f0; 
            border-radius: 12px; 
            font-size: 14px; 
            resize: none; 
            margin-bottom: 20px;
            font-family: inherit;
            line-height: 1.4;
            background: #f8fafc;
        ">${text}</textarea>
        <div style="display: flex; gap: 12px;">
            <button onclick="selectAndCopy();" style="
                flex: 1;
                background: linear-gradient(135deg, #059669 0%, #047857 100%);
                color: white; 
                border: none; 
                padding: 14px 20px; 
                border-radius: 12px; 
                cursor: pointer;
                font-weight: 600;
                font-size: 15px;
            ">üìã –í—ã–¥–µ–ª–∏—Ç—å –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
            <button onclick="this.closest('.share-modal').remove();" style="
                flex: 1;
                background: #6b7280; 
                color: white; 
                border: none; 
                padding: 14px 20px; 
                border-radius: 12px; 
                cursor: pointer;
                font-weight: 500;
                font-size: 15px;
            ">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>
    `;
    
    modal.appendChild(dialog);
    document.body.appendChild(modal);
    
    // –ê–≤—Ç–æ–≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ
    const textarea = dialog.querySelector('#share-textarea');
    textarea.onclick = () => textarea.select();
    
    // –§—É–Ω–∫—Ü–∏—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    window.selectAndCopy = function() {
        textarea.select();
        textarea.setSelectionRange(0, 99999); // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        
        try {
            document.execCommand('copy');
            showCleanNotification('üìã –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
            modal.remove();
        } catch (error) {
            showCleanNotification('‚ö†Ô∏è –í—ã–¥–µ–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');
        }
    };
    
    modal.onclick = (e) => {
        if (e.target === modal) modal.remove();
    };
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
function closeCleanModal(modal) {
    modal.style.animation = 'modalFadeOut 0.3s ease-out';
    setTimeout(() => {
        if (modal.parentNode) {
            modal.parentNode.removeChild(modal);
        }
    }, 300);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –∞–Ω–∏–º–∞—Ü–∏–∏
function addModalStyles() {
    if (document.getElementById('clean-modal-styles')) return;
    
    const style = document.createElement('style');
    style.id = 'clean-modal-styles';
    style.textContent = `
        @keyframes modalFadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @keyframes modalFadeOut {
            from { opacity: 1; }
            to { opacity: 0; }
        }
        
        @keyframes modalSlideIn {
            from { 
                opacity: 0; 
                transform: translateY(-30px) scale(0.95); 
            }
            to { 
                opacity: 1; 
                transform: translateY(0) scale(1); 
            }
        }
        
        @keyframes notificationSlideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        @keyframes notificationSlideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }
    `;
    document.head.appendChild(style);
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showCleanNotification(text) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const existingNotifications = document.querySelectorAll('.clean-notification');
    existingNotifications.forEach(notif => notif.remove());
    
    const notification = document.createElement('div');
    notification.className = 'clean-notification';
    notification.style.cssText = `
        position: fixed;
        top: 24px;
        right: 24px;
        background: linear-gradient(135deg, #059669 0%, #047857 100%);
        color: white;
        padding: 16px 24px;
        border-radius: 16px;
        font-size: 15px;
        font-weight: 600;
        z-index: 10001;
        box-shadow: 0 8px 25px rgba(5, 150, 105, 0.4);
        max-width: 320px;
        line-height: 1.4;
        animation: notificationSlideIn 0.4s ease-out;
        border: 1px solid rgba(255, 255, 255, 0.2);
    `;
    
    notification.textContent = text;
    document.body.appendChild(notification);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
    setTimeout(() => {
        notification.style.animation = 'notificationSlideOut 0.4s ease-out';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 400);
    }, 4000);
}

// –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —à–µ—Ä–∏–Ω–≥
function rewardSharing() {
    if (window.Gamification && window.Gamification.stats) {
        const stats = window.Gamification.stats;
        
        if (!stats.achievements.includes('social_butterfly')) {
            stats.achievements.push('social_butterfly');
            
            setTimeout(() => {
                if (window.Gamification.showAchievement) {
                    window.Gamification.showAchievement('–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –±–∞–±–æ—á–∫–∞: –ø–æ–¥–µ–ª–∏–ª—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º! ü¶ã');
                }
            }, 1200);
            
            if (window.Gamification.saveStats) {
                window.Gamification.saveStats();
            }
        }
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function getResultEmoji(percentage) {
    if (percentage >= 95) return 'üèÜ';
    if (percentage >= 85) return 'üåü';
    if (percentage >= 75) return 'üéâ';
    if (percentage >= 65) return 'üëè';
    if (percentage >= 50) return 'üëç';
    if (percentage >= 35) return 'üìö';
    return 'üí™';
}

function getResultGrade(percentage) {
    if (percentage >= 95) return '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ';
    if (percentage >= 85) return '–û—Ç–ª–∏—á–Ω–æ';
    if (percentage >= 75) return '–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ';
    if (percentage >= 65) return '–•–æ—Ä–æ—à–æ';
    if (percentage >= 50) return '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ';
    if (percentage >= 35) return '–ï—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª';
    return '–ù–∞—á–∏–Ω–∞–µ–º –∏–∑—É—á–∞—Ç—å';
}

function getCleanMotivation(percentage) {
    if (percentage >= 90) {
        return 'üèÜ –í—ã–¥–∞—é—â–∏–π—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —ç–∫—Å–ø–µ—Ä—Ç –≤ –º–µ–¥–∏—Ü–∏–Ω–µ!';
    } else if (percentage >= 75) {
        return '‚≠ê –û—Ç–ª–∏—á–Ω—ã–µ –∑–Ω–∞–Ω–∏—è! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!';
    } else if (percentage >= 60) {
        return 'üëç –•–æ—Ä–æ—à–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π! –ï—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏!';
    } else if (percentage >= 40) {
        return 'üìñ –ù–µ–ø–ª–æ—Ö–æ–µ –Ω–∞—á–∞–ª–æ! –ë–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ - –∏ —É—Å–ø–µ—Ö –ø—Ä–∏–¥–µ—Ç!';
    } else {
        return 'üöÄ –ö–∞–∂–¥—ã–π —ç–∫—Å–ø–µ—Ä—Ç –∫–æ–≥–¥–∞-—Ç–æ –±—ã–ª –Ω–æ–≤–∏—á–∫–æ–º. –í–ø–µ—Ä–µ–¥ –∫ –∑–Ω–∞–Ω–∏—è–º!';
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.debugCleanShare = {
    test: () => {
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ñ–µ–π–∫–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        window.score = 8;
        window.questionsForQuiz = new Array(10);
        window.currentQuizMode = 'anatomy';
        window.currentDifficulty = 'easy';
        shareResults();
    },
    
    testCopy: () => {
        const text = "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è";
        copyCleanText(text);
    },
    
    checkBridge: () => {
        const bridge = getBridgeInstance();
        console.log('VK Bridge –¥–æ—Å—Ç—É–ø–µ–Ω:', !!bridge);
        return !!bridge;
    }
};

console.log('‚úÖ –ü–û–õ–ù–û–°–¢–¨–Æ –ù–û–í–ê–Ø —Å–∏—Å—Ç–µ–º–∞ —à–µ—Ä–∏–Ω–≥–∞ –ë–ï–ó —Å—Å—ã–ª–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
console.log('üîß –¢–µ—Å—Ç: window.debugCleanShare.test()');

// –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ó–ê–ú–ï–ù–ï:
// 1. –ù–∞–π–¥–∏—Ç–µ –≤ app.js —Ñ—É–Ω–∫—Ü–∏—é shareResults()
// 2. –ó–∞–º–µ–Ω–∏—Ç–µ –µ–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞ —ç—Ç–æ—Ç –∫–æ–¥
// 3. –£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã vk-share-*.js
// 4. –¢–µ–ø–µ—Ä—å —à–µ—Ä–∏–Ω–≥ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ë–ï–ó —Å—Å—ã–ª–æ–∫ –Ω–∞ GitHub!
