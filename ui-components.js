// –£–ª—É—á—à–µ–Ω–Ω—ã–π UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
const UI = {
  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
  renderMainMenu: function() {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    this.checkDailyStreak();
    
    const mainContainer = document.getElementById('app');
    mainContainer.innerHTML = `
      <div class="quiz-container fade-in">
        <div class="app-header">
          <h1>–ê–Ω–∞—Ç–æ–º–∏—è –ß–µ–ª–æ–≤–µ–∫–∞</h1>
          <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º —Ç–µ–ª–µ</p>
        </div>
        
        <div class="categories-container">
          ${anatomyQuiz.categories.map((category, index) => `
            <div class="category-card fade-in delay-${index + 1}" onclick="UI.startCategory(${category.id})">
              <div class="category-icon">${category.icon}</div>
              <h3>${category.name}</h3>
              <p>${category.questions.length} –≤–æ–ø—Ä–æ—Å–æ–≤</p>
            </div>
          `).join('')}
        </div>
        
        <div class="stats-panel fade-in delay-4">
          <h3>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
          <div class="stats-card">
            <div class="stat-item">
              <div class="stat-value">${anatomyQuiz.userStats.correctAnswers}</div>
              <div class="stat-label">–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</div>
            </div>
            <div class="stat-item">
              <div class="stat-value">${anatomyQuiz.userStats.totalQuestions}</div>
              <div class="stat-label">–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤</div>
            </div>
            <div class="stat-item">
              <div class="stat-value">${anatomyQuiz.userStats.categoriesCompleted}</div>
              <div class="stat-label">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</div>
            </div>
          </div>
          ${this.renderAchievements()}
          ${anatomyQuiz.userStats.streakDays > 0 ? 
            `<div class="streak-info">
              <p>üî• –í—ã –∏–≥—Ä–∞–µ—Ç–µ ${anatomyQuiz.userStats.streakDays} ${this.getDayWord(anatomyQuiz.userStats.streakDays)} –ø–æ–¥—Ä—è–¥!</p>
            </div>` : ''}
        </div>
        
        <button class="button fade-in delay-4" onclick="shareResults()">
          <span class="button-icon">üì±</span> –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        </button>
      </div>
    `;
  },
  
  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  renderAchievements: function() {
    if (anatomyQuiz.userStats.achievements.length === 0) {
      return '<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ü—Ä–æ–π–¥–∏—Ç–µ –∫–≤–∏–∑, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—ã!</p>';
    }
    
    return `
      <div class="achievements-section">
        <h4>–í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</h4>
        <div class="achievements-list">
          ${anatomyQuiz.userStats.achievements.map(achievement => {
            const achievementData = anatomyQuiz.achievements.find(a => a.id === achievement) || 
                                   { name: achievement, icon: "üèÜ" };
            return `
              <div class="achievement-item">
                <span class="achievement-icon">${achievementData.icon}</span>
                <span class="achievement-name">${achievementData.name}</span>
              </div>
            `;
          }).join('')}
        </div>
      </div>
    `;
  },
  
  // –°–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ "–¥–µ–Ω—å"
  getDayWord: function(days) {
    if (days % 10 === 1 && days % 100 !== 11) {
      return "–¥–µ–Ω—å";
    } else if ((days % 10 >= 2 && days % 10 <= 4) && (days % 100 < 10 || days % 100 >= 20)) {
      return "–¥–Ω—è";
    } else {
      return "–¥–Ω–µ–π";
    }
  },
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  checkDailyStreak: function() {
    const today = new Date().toDateString();
    const lastPlayed = anatomyQuiz.userStats.lastPlayed;
    
    if (!lastPlayed) {
      // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
      anatomyQuiz.userStats.streakDays = 1;
      anatomyQuiz.userStats.lastPlayed = today;
    } else if (lastPlayed !== today) {
      const lastDate = new Date(lastPlayed);
      const currentDate = new Date(today);
      
      // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤ –¥–Ω—è—Ö
      const timeDiff = currentDate.getTime() - lastDate.getTime();
      const dayDiff = Math.round(timeDiff / (1000 * 3600 * 24));
      
      if (dayDiff === 1) {
        // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –¥–µ–Ω—å
        anatomyQuiz.userStats.streakDays += 1;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
        if (anatomyQuiz.userStats.streakDays >= 3 && 
            !anatomyQuiz.userStats.achievements.includes("daily_streak")) {
          anatomyQuiz.userStats.achievements.push("daily_streak");
          this.showAchievementNotification("–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å");
        }
      } else if (dayDiff > 1) {
        // –ü—Ä–æ–ø—É—â–µ–Ω –¥–µ–Ω—å, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        anatomyQuiz.userStats.streakDays = 1;
      }
      
      anatomyQuiz.userStats.lastPlayed = today;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    this.saveUserStats();
  },
  
  // –ó–∞–ø—É—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  startCategory: function(categoryId) {
    currentCategory = anatomyQuiz.categories.find(cat => cat.id === categoryId);
    currentQuestionIndex = 0;
    score = 0;
    
    this.renderQuestion();
  },
  
  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
  renderQuestion: function() {
    const currentQuestion = currentCategory.questions[currentQuestionIndex];
    const mainContainer = document.getElementById('app');
    
    mainContainer.innerHTML = `
      <div class="quiz-container fade-in">
        <h2>${currentCategory.name} ${currentCategory.icon}</h2>
        <div class="progress-bar">
          <div class="progress" style="width: ${(currentQuestionIndex / currentCategory.questions.length) * 100}%"></div>
        </div>
        <div class="question-card">
          <div class="question-number">–í–æ–ø—Ä–æ—Å ${currentQuestionIndex + 1} –∏–∑ ${currentCategory.questions.length}</div>
          <p class="question-text">${currentQuestion.question}</p>
          <div class="options-container">
            ${currentQuestion.options.map((option, index) => `
              <div class="option fade-in delay-${index + 1}" onclick="UI.checkAnswer(${index})">
                <span class="option-letter">${String.fromCharCode(65 + index)}</span>
                <span class="option-text">${option}</span>
              </div>
            `).join('')}
          </div>
        </div>
      </div>
    `;
  },
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
  checkAnswer: function(selectedIndex) {
    const currentQuestion = currentCategory.questions[currentQuestionIndex];
    const isCorrect = selectedIndex === currentQuestion.correctAnswer;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    anatomyQuiz.userStats.totalQuestions++;
    if (isCorrect) {
      anatomyQuiz.userStats.correctAnswers++;
      score++;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–≤–µ—Ç–∞
    this.showAnswerResult(isCorrect, currentQuestion.explanation, selectedIndex);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    this.saveUserStats();
  },
  
  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞
  showAnswerResult: function(isCorrect, explanation, selectedIndex) {
    const optionsElements = document.querySelectorAll('.option');
    const currentQuestion = currentCategory.questions[currentQuestionIndex];
    
    // –û—Ç–º–µ—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
    optionsElements[selectedIndex].classList.add('selected');
    
    // –û—Ç–º–µ—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    optionsElements[currentQuestion.correctAnswer].classList.add('correct-answer');
    
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –æ—Ç–º–µ—á–∞–µ–º –µ–≥–æ –∫—Ä–∞—Å–Ω—ã–º
    if (!isCorrect) {
      optionsElements[selectedIndex].classList.add('wrong-answer');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
    const questionCard = document.querySelector('.question-card');
    const explanationDiv = document.createElement('div');
    explanationDiv.classList.add('explanation', 'fade-in');
    explanationDiv.innerHTML = `
      <p class="${isCorrect ? 'correct' : 'incorrect'}">${isCorrect ? '‚úì –ü—Ä–∞–≤–∏–ª—å–Ω–æ!' : '‚úó –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ'}</p>
      <p>${explanation}</p>
      <button class="button" onclick="UI.nextQuestion()">–î–∞–ª–µ–µ</button>
    `;
    questionCard.appendChild(explanationDiv);
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ –ø–æ –¥—Ä—É–≥–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    optionsElements.forEach(option => {
      option.style.pointerEvents = 'none';
    });
  },
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  nextQuestion: function() {
    currentQuestionIndex++;
    
    if (currentQuestionIndex < currentCategory.questions.length) {
      this.renderQuestion();
    } else {
      this.showCategoryResults();
    }
  },
  
  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  showCategoryResults: function() {
    const mainContainer = document.getElementById('app');
    const percentage = Math.round((score / currentCategory.questions.length) * 100);
    const isPerfect = percentage === 100;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —ç—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
    const isNewCompletion = !anatomyQuiz.userStats.achievements.includes(`expert_${currentCategory.id}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π –µ—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ
    if (isNewCompletion) {
      anatomyQuiz.userStats.categoriesCompleted++;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    let newAchievements = [];
    
    if (isPerfect && isNewCompletion) {
      const achievement = `expert_${currentCategory.id}`;
      if (!anatomyQuiz.userStats.achievements.includes(achievement)) {
        anatomyQuiz.userStats.achievements.push(achievement);
        newAchievements.push("–≠–∫—Å–ø–µ—Ä—Ç –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    const completedAllCategories = anatomyQuiz.categories.every(category => 
      anatomyQuiz.userStats.achievements.includes(`expert_${category.id}`)
    );
    
    if (completedAllCategories && !anatomyQuiz.userStats.achievements.includes("quiz_master")) {
      anatomyQuiz.userStats.achievements.push("quiz_master");
      newAchievements.push("–ú–∞—Å—Ç–µ—Ä –∞–Ω–∞—Ç–æ–º–∏–∏");
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    this.saveUserStats();
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    let resultMessage = "";
    if (percentage < 40) {
      resultMessage = "–°—Ç–æ–∏—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª!";
    } else if (percentage < 70) {
      resultMessage = "–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –º–æ–∂–Ω–æ –ª—É—á—à–µ!";
    } else if (percentage < 100) {
      resultMessage = "–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!";
    } else {
      resultMessage = "–ò–¥–µ–∞–ª—å–Ω–æ! –í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —ç–∫—Å–ø–µ—Ä—Ç!";
    }
    
    mainContainer.innerHTML = `
      <div class="quiz-container">
        <div class="results-card fade-in">
          <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: ${currentCategory.name} ${currentCategory.icon}</h2>
          <div class="score-circle fade-in delay-1">
            <span class="score-text">${percentage}%</span>
          </div>
          <p class="result-message fade-in delay-2">${resultMessage}</p>
          <p class="fade-in delay-2">–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ ${score} –∏–∑ ${currentCategory.questions.length} –≤–æ–ø—Ä–æ—Å–æ–≤.</p>
          
          ${newAchievements.length > 0 ? 
            newAchievements.map(achievement => 
              `<div class="achievement fade-in delay-3">üèÜ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: ${achievement}!</div>`
            ).join('') : ''}
          
          <div class="buttons-container fade-in delay-4">
            <button class="button button-secondary" onclick="UI.renderMainMenu()">–ù–∞ –≥–ª–∞–≤–Ω—É—é</button>
            <button class="button button-success" onclick="UI.startCategory(${currentCategory.id})">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
            <button class="button" onclick="shareResults()">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è</button>
          </div>
        </div>
      </div>
    `;
  },
  
  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏
  showAchievementNotification: function(achievementName) {
    const achievementData = anatomyQuiz.achievements.find(a => a.name === achievementName) || 
                          { name: achievementName, icon: "üèÜ", description: "–ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!" };
    
    const notification = document.createElement('div');
    notification.className = 'achievement-notification fade-in';
    notification.innerHTML = `
      <div class="achievement-notification-icon">${achievementData.icon}</div>
      <div class="achievement-notification-content">
        <div class="achievement-notification-title">–ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!</div>
        <div class="achievement-notification-name">${achievementData.name}</div>
        <div class="achievement-notification-desc">${achievementData.description}</div>
      </div>
    `;
    
    document.body.appendChild(notification);
    
    // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      notification.classList.add('fade-out');
      setTimeout(() => {
        document.body.removeChild(notification);
      }, 500);
    }, 5000);
  },
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  saveUserStats: function() {
    try {
      localStorage.setItem('anatomyQuizStats', JSON.stringify(anatomyQuiz.userStats));
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", e);
    }
  },
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  loadUserStats: function() {
    try {
      const savedStats = localStorage.getItem('anatomyQuizStats');
      if (savedStats) {
        anatomyQuiz.userStats = JSON.parse(savedStats);
      }
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", e);
    }
  }
};