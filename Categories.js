import React, { useState, useEffect } from 'react';
import {
  Panel,
  PanelHeader,
  PanelHeaderBack,
  Group,
  Cell,
  Div,
  Avatar,
  Spinner,
  Placeholder,
  Banner,
  Button
} from '@vkontakte/vkui';
import { Icon56GhostOutline } from '@vkontakte/icons';

const Categories = ({ id, go, startGame, showError }) => {
  const [categories, setCategories] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const loadCategories = () => {
    setLoading(true);
    setError(null);
    
    try {
      // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
      const availableCategories = [
        { id: 'bones', title: '–ö–æ—Å—Ç–∏', icon: 'üíÄ' },
        { id: 'muscles', title: '–ú—ã—à—Ü—ã', icon: 'üí™' },
        { id: 'organs', title: '–û—Ä–≥–∞–Ω—ã', icon: '‚ù§Ô∏è' },
        { id: 'systems', title: '–°–∏—Å—Ç–µ–º—ã –æ—Ä–≥–∞–Ω–∏–∑–º–∞', icon: 'üß†' },
        { id: 'diseases', title: '–ó–∞–±–æ–ª–µ–≤–∞–Ω–∏—è', icon: 'ü©∫' }
      ];
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ localStorage –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
      localStorage.setItem('gameCategories', JSON.stringify(availableCategories));
      
      setCategories(availableCategories);
      setLoading(false);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', err);
      
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ localStorage
      const cachedCategories = localStorage.getItem('gameCategories');
      if (cachedCategories) {
        setCategories(JSON.parse(cachedCategories));
        setLoading(false);
      } else {
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–≥—Ä');
        setLoading(false);
      }
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadCategories();
  }, []);

  return (
    <Panel id={id}>
      <PanelHeader left={<PanelHeaderBack onClick={() => go('home')} />}>
        –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      </PanelHeader>
      
      {loading && <Spinner size="large" style={{ margin: '20px auto' }} />}
      
      {error && !loading && (
        <Div>
          <Banner 
            mode="error"
            header="–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏"
            subheader={error}
            actions={<Button onClick={loadCategories}>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</Button>}
          />
        </Div>
      )}
      
      {!loading && !error && categories.length === 0 && (
        <Placeholder
          icon={<Icon56GhostOutline />}
          header="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        >
          –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ–∑–∂–µ.
        </Placeholder>
      )}
      
      {!loading && !error && categories.length > 0 && (
        <Group>
          {categories.map(category => (
            <Cell
              key={category.id}
              before={<Avatar size={40}>{category.icon}</Avatar>}
              onClick={() => startGame(category.id)}
              expandable
            >
              {category.title}
            </Cell>
          ))}
        </Group>
      )}
    </Panel>
  );
};

export default Categories;
