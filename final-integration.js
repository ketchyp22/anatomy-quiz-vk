// final-integration.js - –ü–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
(function() {
    'use strict';
    
    let isQuizActive = false;
    let currentResults = null;
    
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(finalIntegration, 2500); // –£–≤–µ–ª–∏—á–∏–ª–∏ –∑–∞–¥–µ—Ä–∂–∫—É
    });
    
    function finalIntegration() {
        console.log('üîß [Final] –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏');
        
        if (!window.Gamification) {
            console.warn('[Final] –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–≤–∏–∑–∞
        setupQuizTracking();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤
        setupAnswerTracking();
        
        // –ó–∞–º–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –Ω–∞ —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é
        replaceShareButton();
        
        console.log('‚úÖ [Final] –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–≤–∏–∑–∞
    function setupQuizTracking() {
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.type === 'attributes' && mutation.attributeName === 'style') {
                    handleScreenChange(mutation.target);
                }
            });
        });
        
        const screens = ['start-screen', 'quiz-container', 'results-container'];
        screens.forEach(screenId => {
            const screen = document.getElementById(screenId);
            if (screen) {
                observer.observe(screen, { attributes: true, attributeFilter: ['style'] });
            }
        });
    }
    
    function handleScreenChange(target) {
        const isVisible = target.style.display !== 'none';
        
        if (target.id === 'quiz-container' && isVisible && !isQuizActive) {
            startQuiz();
        } else if (target.id === 'results-container' && isVisible && isQuizActive) {
            setTimeout(finishQuiz, 500); // –î–∞–µ–º –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ DOM
        } else if (target.id === 'start-screen' && isVisible) {
            resetQuiz();
        }
    }
    
    function startQuiz() {
        isQuizActive = true;
        currentResults = null;
        console.log('üéÆ [Final] –ö–≤–∏–∑ –Ω–∞—á–∞—Ç');
    }
    
    function finishQuiz() {
        if (!isQuizActive) return;
        
        isQuizActive = false;
        
        // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
        attemptToGetResults(0);
    }
    
    function attemptToGetResults(attempt) {
        if (attempt >= 10) {
            console.error('[Final] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Å–ª–µ 10 –ø–æ–ø—ã—Ç–æ–∫');
            return;
        }
        
        const results = getResults();
        if (results) {
            currentResults = results;
            console.log('üèÅ [Final] –ö–≤–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω:', results);
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—é
            window.Gamification.onQuizComplete(results);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            setTimeout(addMotivationalMessage, 200);
        } else {
            // –ü—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ 200–º—Å
            setTimeout(() => attemptToGetResults(attempt + 1), 200);
        }
    }
    
    function resetQuiz() {
        isQuizActive = false;
        currentResults = null;
        setTimeout(() => {
            window.Gamification.updateStatsDisplay();
        }, 100);
    }
    
    function getResults() {
        try {
            const percentageEl = document.getElementById('percentage');
            const correctEl = document.getElementById('correct-answers');
            const totalEl = document.getElementById('total-questions-result');
            
            if (!percentageEl || !correctEl || !totalEl) {
                return null;
            }
            
            const percentage = parseInt(percentageEl.textContent) || 0;
            const correct = parseInt(correctEl.textContent) || 0;
            const total = parseInt(totalEl.textContent) || 0;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã
            if (percentage === 0 && correct === 0 && total === 0) {
                return null;
            }
            
            return { percentage, correct, total };
        } catch (e) {
            console.error('[Final] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', e);
            return null;
        }
    }
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤
    function setupAnswerTracking() {
        document.addEventListener('click', function(e) {
            if (!e.target.classList.contains('option') || !isQuizActive) return;
            
            setTimeout(() => {
                if (e.target.classList.contains('correct')) {
                    console.log('‚úÖ [Final] –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω');
                    window.Gamification.onCorrectAnswer();
                } else if (e.target.classList.contains('wrong')) {
                    console.log('‚ùå [Final] –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω');
                    window.Gamification.onWrongAnswer();
                }
            }, 600); // –£–≤–µ–ª–∏—á–∏–ª–∏ –∑–∞–¥–µ—Ä–∂–∫—É
        });
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    function addMotivationalMessage() {
        const container = document.getElementById('results-container');
        if (!container) return;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ
        if (container.querySelector('.motivational-message')) {
            console.log('[Final] –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ');
            return;
        }
        
        if (!currentResults) {
            console.warn('[Final] –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è');
            return;
        }
        
        const motivation = window.Gamification.addMotivationalMessage(currentResults.percentage);
        const messageEl = document.createElement('div');
        messageEl.className = 'motivational-message';
        messageEl.innerHTML = `
            <span class="message-icon">${motivation.icon}</span>
            <div class="message-text">${motivation.message}</div>
        `;
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ —Å –æ—Ü–µ–Ω–∫–æ–π
        const scoreEl = container.querySelector('.score');
        if (scoreEl) {
            scoreEl.parentNode.insertBefore(messageEl, scoreEl.nextSibling);
            console.log('‚úÖ [Final] –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ');
        }
    }
    
    // –ü–û–õ–ù–ê–Ø –ó–ê–ú–ï–ù–ê –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
    function replaceShareButton() {
        const shareButton = document.getElementById('share-results');
        if (!shareButton) {
            console.warn('[Final] –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }
        
        // –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        shareButton.onclick = function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            console.log('üì§ [Final] –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"');
            handleShare();
        };
        
        console.log('‚úÖ [Final] –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –∑–∞–º–µ–Ω–µ–Ω–∞');
    }
    
    function handleShare() {
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–ª–∏ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∑–∞–Ω–æ–≤–æ)
        let results = currentResults;
        if (!results) {
            results = getResults();
        }
        
        if (!results) {
            console.error('[Final] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —à–µ—Ä–∏–Ω–≥–∞');
            showErrorMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
            return;
        }
        
        console.log('[Final] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —à–µ—Ä–∏–Ω–≥–∞:', results);
        
        // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        const message = createShareMessage(results);
        console.log('[Final] –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —à–µ—Ä–∏–Ω–≥–∞ –≥–æ—Ç–æ–≤–æ');
        
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —à–µ—Ä–∏–Ω–≥–∞
        tryShareMethods(message);
    }
    
    function tryShareMethods(message) {
        console.log('[Final] –ü—Ä–æ–±—É–µ–º —Å–ø–æ—Å–æ–±—ã —à–µ—Ä–∏–Ω–≥–∞...');
        
        // –°–ø–æ—Å–æ–± 1: VK Bridge (–ø—Ä–æ–±—É–µ–º, –Ω–æ –Ω–µ –ø–æ–ª–∞–≥–∞–µ–º—Å—è –Ω–∞ –Ω–µ–≥–æ)
        if (tryVKBridge(message)) {
            return; // –ï—Å–ª–∏ —Å—Ä–∞–±–æ—Ç–∞–ª, –≤—ã—Ö–æ–¥–∏–º
        }
        
        // –°–ø–æ—Å–æ–± 2: –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ VK (–Ω–∞–¥–µ–∂–Ω—ã–π)
        if (tryVKDirectLink(message)) {
            return;
        }
        
        // –°–ø–æ—Å–æ–± 3: –ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ (–≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç)
        copyToClipboard(message);
    }
    
    function tryVKBridge(message) {
        try {
            let bridge = null;
            
            if (window.vkBridgeInstance) {
                bridge = window.vkBridgeInstance;
            } else if (window.vkBridge) {
                bridge = window.vkBridge;
            } else if (typeof vkBridge !== 'undefined') {
                bridge = vkBridge;
            }
            
            if (!bridge) {
                console.log('[Final] VK Bridge –Ω–µ –Ω–∞–π–¥–µ–Ω');
                return false;
            }
            
            console.log('[Final] –ü—Ä–æ–±—É–µ–º VK Bridge...');
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
            bridge.send('VKWebAppShare', { message: message })
                .then(data => {
                    console.log('‚úÖ [Final] VK Bridge —É—Å–ø–µ—à–Ω–æ:', data);
                    giveShareReward();
                    showSuccessMessage('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!');
                })
                .catch(error => {
                    console.warn('[Final] VK Bridge –æ—à–∏–±–∫–∞:', error);
                    // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ø–æ—Å–æ–±—É
                    setTimeout(() => tryVKDirectLink(message), 100);
                });
            
            return true; // –ü–æ–ø—ã—Ç–∫–∞ –±—ã–ª–∞ —Å–¥–µ–ª–∞–Ω–∞
        } catch (e) {
            console.error('[Final] VK Bridge –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', e);
            return false;
        }
    }
    
    function tryVKDirectLink(message) {
        try {
            console.log('[Final] –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É VK...');
            
            const encodedMessage = encodeURIComponent(message);
            const currentUrl = encodeURIComponent(window.location.href);
            const title = encodeURIComponent('–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–≤–∏–∑ - –º–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã');
            
            const vkUrl = `https://vk.com/share.php?url=${currentUrl}&title=${title}&description=${encodedMessage}&noparse=1`;
            
            const newWindow = window.open(vkUrl, 'vk_share', 'width=650,height=500,scrollbars=yes,resizable=yes');
            
            if (newWindow) {
                console.log('‚úÖ [Final] VK –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ');
                giveShareReward();
                showSuccessMessage('–û–∫–Ω–æ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –æ—Ç–∫—Ä—ã—Ç–æ!');
                return true;
            } else {
                console.warn('[Final] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å VK –æ–∫–Ω–æ (–±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –ø–æ–ø–∞–ø–æ–≤)');
                return false;
            }
        } catch (e) {
            console.error('[Final] –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–∏ VK:', e);
            return false;
        }
    }
    
    function copyToClipboard(message) {
        console.log('[Final] –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞...');
        
        if (navigator.clipboard && navigator.clipboard.writeText) {
            navigator.clipboard.writeText(message)
                .then(() => {
                    console.log('‚úÖ [Final] –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ Clipboard API');
                    showSuccessMessage('‚úÖ –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω! –í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–æ—Å—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ');
                    giveShareReward();
                })
                .catch(err => {
                    console.warn('[Final] Clipboard API –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª:', err);
                    fallbackCopy(message);
                });
        } else {
            fallbackCopy(message);
        }
    }
    
    function fallbackCopy(message) {
        try {
            console.log('[Final] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è...');
            
            const textArea = document.createElement('textarea');
            textArea.value = message;
            textArea.style.cssText = 'position: fixed; left: -9999px; top: -9999px;';
            
            document.body.appendChild(textArea);
            textArea.focus();
            textArea.select();
            
            const successful = document.execCommand('copy');
            document.body.removeChild(textArea);
            
            if (successful) {
                console.log('‚úÖ [Final] –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ —Å—Ç–∞—Ä—ã–º —Å–ø–æ—Å–æ–±–æ–º');
                showSuccessMessage('‚úÖ –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω! –í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–æ—Å—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ');
                giveShareReward();
            } else {
                throw new Error('execCommand –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª');
            }
        } catch (e) {
            console.error('[Final] –í—Å–µ —Å–ø–æ—Å–æ–±—ã –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏:', e);
            
            // –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑–µ—Ä–≤ - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ alert
            alert(`üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ—Å—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ:\n\n${message}`);
            giveShareReward();
        }
    }
    
    function createShareMessage(results) {
        const modeBtn = document.querySelector('.quiz-mode-btn.active');
        const diffBtn = document.querySelector('.difficulty-btn.active');
        
        const mode = modeBtn ? modeBtn.textContent.trim() : '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–≤–∏–∑';
        const difficulty = diffBtn ? diffBtn.textContent.trim() : '–æ–±—ã—á–Ω—ã–π';
        
        let emoji = 'üìä';
        if (results.percentage >= 95) emoji = 'üèÜ';
        else if (results.percentage >= 85) emoji = 'üåü';
        else if (results.percentage >= 75) emoji = 'üëç';
        else if (results.percentage >= 60) emoji = 'üìö';
        
        let message = `${emoji} –ü—Ä–æ—à–µ–ª –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ç–µ—Å—Ç "${mode}"`;
        
        if (difficulty.toLowerCase() !== '–æ–±—ã—á–Ω—ã–π') {
            message += ` (${difficulty.toLowerCase()} —É—Ä–æ–≤–µ–Ω—å)`;
        }
        
        message += ` –∏ –Ω–∞–±—Ä–∞–ª ${results.percentage}%!\n\n`;
        message += `‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${results.correct} –∏–∑ ${results.total}\n`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if (window.Gamification && window.Gamification.stats) {
            const stats = window.Gamification.stats;
            
            if (stats.currentStreak > 2) {
                message += `üî• –°–µ—Ä–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${stats.currentStreak}\n`;
            }
            
            if (stats.totalQuizzes > 1) {
                message += `üìà –í—Å–µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${stats.totalQuizzes}\n`;
            }
            
            if (stats.achievements && stats.achievements.length > 0) {
                message += `üèÖ –ü–æ–ª—É—á–µ–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${stats.achievements.length}\n`;
            }
        }
        
        message += '\nü©∫ –ê —Ç—ã —Å–º–æ–∂–µ—à—å –ª—É—á—à–µ? –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è!';
        
        return message;
    }
    
    function showSuccessMessage(text) {
        showMessage(text, '#28a745');
    }
    
    function showErrorMessage(text) {
        showMessage(text, '#dc3545');
    }
    
    function showMessage(text, color) {
        const toast = document.createElement('div');
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${color};
            color: white;
            padding: 15px 20px;
            border-radius: 12px;
            font-weight: 500;
            z-index: 10000;
            max-width: 350px;
            word-wrap: break-word;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            transform: translateX(100%);
            transition: transform 0.3s ease-out;
        `;
        
        toast.textContent = text;
        document.body.appendChild(toast);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º
        setTimeout(() => {
            toast.style.transform = 'translateX(0)';
        }, 100);
        
        // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            toast.style.transform = 'translateX(100%)';
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 300);
        }, 4000);
    }
    
    function giveShareReward() {
        console.log('üèÜ [Final] –î–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —à–µ—Ä–∏–Ω–≥');
        
        if (window.Gamification && window.Gamification.stats) {
            const stats = window.Gamification.stats;
            
            if (!stats.achievements.includes('social')) {
                stats.achievements.push('social');
                setTimeout(() => {
                    window.Gamification.showAchievement('–°–æ—Ü–∏–∞–ª—å–Ω—ã–π: –ø–æ–¥–µ–ª–∏–ª—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º! üì±');
                }, 1000);
                window.Gamification.saveStats();
            }
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    window.testFinalIntegration = function() {
        console.log('üß™ [Final] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏');
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à–µ—Ä–∏–Ω–≥–∞
        currentResults = {
            percentage: 85,
            correct: 8,
            total: 10
        };
        
        const message = createShareMessage(currentResults);
        console.log('–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);
        
        tryShareMethods(message);
    };
    
})();
