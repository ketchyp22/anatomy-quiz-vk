// simple-sharing.js - –ü—Ä–æ—Å—Ç–æ–µ –∏ –Ω–∞–¥–µ–∂–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —à–µ—Ä–∏–Ω–≥–∞
(function() {
    'use strict';
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(setupSimpleSharing, 1000);
    });
    
    function setupSimpleSharing() {
        console.log('üì§ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —à–µ—Ä–∏–Ω–≥');
        
        const shareButton = document.getElementById('share-results');
        if (!shareButton) {
            console.warn('–ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }
        
        // –ó–∞–º–µ–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π
        shareButton.onclick = function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            console.log('üéØ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"');
            handleSimpleShare();
        };
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        shareButton.innerHTML = 'üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º';
        
        console.log('‚úÖ –ü—Ä–æ—Å—Ç–æ–π —à–µ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
    
    function handleSimpleShare() {
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const results = getCurrentResults();
        if (!results) {
            showError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞');
            return;
        }
        
        console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:', results);
        
        // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        const message = createSimpleMessage(results);
        console.log('üìù –°–æ–æ–±—â–µ–Ω–∏–µ:', message);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ —à–µ—Ä–∏–Ω–≥–∞
        showSharingOptions(message);
    }
    
    function getCurrentResults() {
        try {
            const percentageEl = document.getElementById('percentage');
            const correctEl = document.getElementById('correct-answers');
            const totalEl = document.getElementById('total-questions-result');
            
            if (!percentageEl || !correctEl || !totalEl) {
                return null;
            }
            
            return {
                percentage: parseInt(percentageEl.textContent) || 0,
                correct: parseInt(correctEl.textContent) || 0,
                total: parseInt(totalEl.textContent) || 0
            };
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', e);
            return null;
        }
    }
    
    function createSimpleMessage(results) {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Å—Ç–µ
        const modeBtn = document.querySelector('.quiz-mode-btn.active');
        const diffBtn = document.querySelector('.difficulty-btn.active');
        
        const mode = modeBtn ? modeBtn.textContent.trim() : '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–≤–∏–∑';
        const difficulty = diffBtn ? diffBtn.textContent.trim() : '–æ–±—ã—á–Ω—ã–π';
        
        // –í—ã–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        let emoji = 'üìä';
        let grade = '–•–æ—Ä–æ—à–æ';
        
        if (results.percentage >= 90) {
            emoji = 'üèÜ';
            grade = '–û—Ç–ª–∏—á–Ω–æ';
        } else if (results.percentage >= 80) {
            emoji = 'üåü';
            grade = '–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ';
        } else if (results.percentage >= 70) {
            emoji = 'üëç';
            grade = '–•–æ—Ä–æ—à–æ';
        } else if (results.percentage >= 50) {
            emoji = 'üìö';
            grade = '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ';
        }
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        let message = `${emoji} ${grade}! –ü—Ä–æ—à–µ–ª "${mode}"`;
        
        if (difficulty.toLowerCase() !== '–æ–±—ã—á–Ω—ã–π') {
            message += ` (${difficulty.toLowerCase()} —É—Ä–æ–≤–µ–Ω—å)`;
        }
        
        message += ` - ${results.percentage}%\n`;
        message += `–ü—Ä–∞–≤–∏–ª—å–Ω–æ: ${results.correct}/${results.total}\n`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
        if (window.Gamification && window.Gamification.stats) {
            const stats = window.Gamification.stats;
            
            if (stats.currentStreak > 2) {
                message += `üî• –°–µ—Ä–∏—è: ${stats.currentStreak} –ø–æ–¥—Ä—è–¥\n`;
            }
            
            if (stats.totalQuizzes > 1) {
                message += `üìà –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${stats.totalQuizzes}\n`;
            }
        }
        
        message += '\nü©∫ –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è!';
        
        return message;
    }
    
    function showSharingOptions(message) {
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
        const modal = document.createElement('div');
        modal.className = 'sharing-modal';
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 10000;
            backdrop-filter: blur(4px);
        `;
        
        const modalContent = document.createElement('div');
        modalContent.style.cssText = `
            background: white;
            padding: 30px;
            border-radius: 20px;
            max-width: 90%;
            width: 400px;
            text-align: center;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            animation: modalSlideIn 0.3s ease-out;
        `;
        
        modalContent.innerHTML = `
            <h3 style="margin: 0 0 20px 0; color: #333;">üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏</h3>
            <div style="background: #f8f9fa; padding: 15px; border-radius: 12px; margin: 20px 0; font-family: monospace; font-size: 14px; line-height: 1.4; text-align: left; white-space: pre-line;">${message}</div>
            <div style="display: flex; flex-direction: column; gap: 10px; margin-top: 20px;">
                <button id="share-vk-direct" style="background: #4680C2; color: white; border: none; padding: 12px 20px; border-radius: 10px; font-size: 16px; cursor: pointer; transition: all 0.2s;">
                    üåê –û—Ç–∫—Ä—ã—Ç—å –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
                </button>
                <button id="share-copy" style="background: #28a745; color: white; border: none; padding: 12px 20px; border-radius: 10px; font-size: 16px; cursor: pointer; transition: all 0.2s;">
                    üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç
                </button>
                <button id="share-close" style="background: #6c757d; color: white; border: none; padding: 8px 16px; border-radius: 8px; font-size: 14px; cursor: pointer; transition: all 0.2s;">
                    –û—Ç–º–µ–Ω–∞
                </button>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        const style = document.createElement('style');
        style.textContent = `
            @keyframes modalSlideIn {
                from {
                    opacity: 0;
                    transform: scale(0.8) translateY(-50px);
                }
                to {
                    opacity: 1;
                    transform: scale(1) translateY(0);
                }
            }
            .sharing-modal button:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            }
        `;
        document.head.appendChild(style);
        
        modal.appendChild(modalContent);
        document.body.appendChild(modal);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
        const vkButton = modalContent.querySelector('#share-vk-direct');
        const copyButton = modalContent.querySelector('#share-copy');
        const closeButton = modalContent.querySelector('#share-close');
        
        vkButton.onclick = function() {
            shareToVKDirect(message);
            closeModal();
        };
        
        copyButton.onclick = function() {
            copyToClipboard(message);
            closeModal();
        };
        
        closeButton.onclick = closeModal;
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.onclick = function(e) {
            if (e.target === modal) {
                closeModal();
            }
        };
        
        function closeModal() {
            modal.style.opacity = '0';
            modalContent.style.transform = 'scale(0.8) translateY(-50px)';
            setTimeout(() => {
                if (modal.parentNode) {
                    modal.parentNode.removeChild(modal);
                }
                if (style.parentNode) {
                    style.parentNode.removeChild(style);
                }
            }, 300);
        }
    }
    
    function shareToVKDirect(message) {
        try {
            console.log('üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –¥–ª—è —à–µ—Ä–∏–Ω–≥–∞');
            
            // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è —à–µ—Ä–∏–Ω–≥–∞
            const encodedMessage = encodeURIComponent(message);
            const currentUrl = encodeURIComponent(window.location.href);
            const title = encodeURIComponent('–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–≤–∏–∑ - –º–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã');
            
            const vkUrl = `https://vk.com/share.php?url=${currentUrl}&title=${title}&description=${encodedMessage}&noparse=1`;
            
            // –ü—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
            const newWindow = window.open(vkUrl, 'vk_share', 'width=650,height=500,scrollbars=yes,resizable=yes');
            
            if (newWindow) {
                console.log('‚úÖ –û–∫–Ω–æ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –æ—Ç–∫—Ä—ã—Ç–æ');
                giveShareReward();
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ –æ–∫–Ω–æ
                setTimeout(() => {
                    try {
                        if (newWindow.closed) {
                            console.log('üëç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª —à–µ—Ä–∏–Ω–≥');
                        }
                    } catch (e) {
                        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ cross-origin
                    }
                }, 1000);
            } else {
                console.warn('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ (–±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ –ø–æ–ø–∞–ø–æ–≤)');
                
                // Fallback: –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ —Ç–æ–π –∂–µ –≤–∫–ª–∞–¥–∫–µ
                showMessage('–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ...', 'info');
                setTimeout(() => {
                    window.open(vkUrl, '_blank');
                }, 1000);
            }
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ:', e);
            showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ', 'error');
        }
    }
    
    function copyToClipboard(message) {
        console.log('üìã –ö–æ–ø–∏—Ä—É–µ–º –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
        
        if (navigator.clipboard && navigator.clipboard.writeText) {
            // –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–±
            navigator.clipboard.writeText(message)
                .then(() => {
                    console.log('‚úÖ –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π API)');
                    showMessage('‚úÖ –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø–æ—Å—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ', 'success');
                    giveShareReward();
                })
                .catch(err => {
                    console.error('–û—à–∏–±–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
                    fallbackCopy(message);
                });
        } else {
            // –°—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±
            fallbackCopy(message);
        }
    }
    
    function fallbackCopy(message) {
        try {
            console.log('üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è');
            
            const textArea = document.createElement('textarea');
            textArea.value = message;
            textArea.style.position = 'fixed';
            textArea.style.left = '-9999px';
            textArea.style.top = '-9999px';
            
            document.body.appendChild(textArea);
            textArea.focus();
            textArea.select();
            
            const successful = document.execCommand('copy');
            document.body.removeChild(textArea);
            
            if (successful) {
                console.log('‚úÖ –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)');
                showMessage('‚úÖ –¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø–æ—Å—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ', 'success');
                giveShareReward();
            } else {
                throw new Error('execCommand failed');
            }
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', e);
            
            // –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑–µ—Ä–≤ - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            showTextForManualCopy(message);
        }
    }
    
    function showTextForManualCopy(message) {
        console.log('üìù –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è');
        
        const modal = document.createElement('div');
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 10001;
        `;
        
        const content = document.createElement('div');
        content.style.cssText = `
            background: white;
            padding: 30px;
            border-radius: 15px;
            max-width: 90%;
            width: 500px;
            text-align: center;
        `;
        
        content.innerHTML = `
            <h3 style="margin: 0 0 15px 0;">üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –≤—Ä—É—á–Ω—É—é</h3>
            <textarea readonly style="width: 100%; height: 200px; padding: 10px; border: 1px solid #ddd; border-radius: 8px; font-family: monospace; font-size: 14px; resize: vertical;">${message}</textarea>
            <div style="margin-top: 15px;">
                <button onclick="this.parentElement.parentElement.parentElement.remove()" style="background: #007bff; color: white; border: none; padding: 10px 20px; border-radius: 8px; cursor: pointer;">
                    –ü–æ–Ω—è—Ç–Ω–æ
                </button>
            </div>
        `;
        
        modal.appendChild(content);
        document.body.appendChild(modal);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç
        const textarea = content.querySelector('textarea');
        textarea.focus();
        textarea.select();
        
        giveShareReward();
    }
    
    function showMessage(text, type = 'info') {
        const colors = {
            success: '#28a745',
            error: '#dc3545',
            info: '#17a2b8'
        };
        
        const toast = document.createElement('div');
        toast.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${colors[type]};
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            font-weight: 500;
            z-index: 10002;
            max-width: 300px;
            word-wrap: break-word;
            animation: slideInRight 0.3s ease-out;
        `;
        
        toast.textContent = text;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideInRight {
                from {
                    opacity: 0;
                    transform: translateX(100%);
                }
                to {
                    opacity: 1;
                    transform: translateX(0);
                }
            }
        `;
        document.head.appendChild(style);
        
        document.body.appendChild(toast);
        
        // –£–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            toast.style.opacity = '0';
            toast.style.transform = 'translateX(100%)';
            setTimeout(() => {
                if (toast.parentNode) toast.parentNode.removeChild(toast);
                if (style.parentNode) style.parentNode.removeChild(style);
            }, 300);
        }, 4000);
    }
    
    function showError(message) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', message);
        showMessage(`‚ùå ${message}`, 'error');
    }
    
    function giveShareReward() {
        console.log('üèÜ –î–∞–µ–º –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —à–µ—Ä–∏–Ω–≥');
        
        if (window.Gamification && window.Gamification.stats) {
            const stats = window.Gamification.stats;
            
            if (!stats.achievements.includes('social')) {
                stats.achievements.push('social');
                setTimeout(() => {
                    window.Gamification.showAchievement('–°–æ—Ü–∏–∞–ª—å–Ω—ã–π: –ø–æ–¥–µ–ª–∏–ª—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º! üì±');
                }, 500);
                window.Gamification.saveStats();
            }
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    window.testSimpleShare = function() {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —à–µ—Ä–∏–Ω–≥');
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const testResults = {
            percentage: 85,
            correct: 8,
            total: 10
        };
        
        const message = createSimpleMessage(testResults);
        showSharingOptions(message);
    };
    
})();
