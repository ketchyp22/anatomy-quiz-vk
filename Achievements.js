import React, { useState, useEffect } from 'react';
import {
  Panel,
  PanelHeader,
  PanelHeaderBack,
  Group,
  Div,
  Cell,
  Avatar,
  Text,
  Button,
  Placeholder
} from '@vkontakte/vkui';
import { Icon56GhostOutline } from '@vkontakte/icons';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
const EmptyAchievements = ({ onPlayGame }) => {
  return (
    <Placeholder
      icon={<Icon56GhostOutline />}
      header="–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    >
      <Div>
        <Text weight="regular" style={{ margin: '8px 0 16px' }}>
          –ß—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –≤–∏–∫—Ç–æ—Ä–∏–Ω—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã—à–µ 70%.
        </Text>
        <Button size="m" onClick={onPlayGame}>
          –ò–≥—Ä–∞—Ç—å —Å–µ–π—á–∞—Å
        </Button>
      </Div>
    </Placeholder>
  );
};

const Achievements = ({ id, go, gameStats, showError }) => {
  const [achievements, setAchievements] = useState([]);
  const [loading, setLoading] = useState(true);

  // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  const allAchievements = [
    { id: 'first_completion_bones', title: '–ü–µ—Ä–≤–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ: –ö–æ—Å—Ç–∏', description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ö–æ—Å—Ç–∏"', icon: 'üíÄ' },
    { id: 'first_completion_muscles', title: '–ü–µ—Ä–≤–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ: –ú—ã—à—Ü—ã', description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ú—ã—à—Ü—ã"', icon: 'üí™' },
    { id: 'first_completion_organs', title: '–ü–µ—Ä–≤–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ: –û—Ä–≥–∞–Ω—ã', description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–û—Ä–≥–∞–Ω—ã"', icon: '‚ù§Ô∏è' },
    { id: 'first_completion_systems', title: '–ü–µ—Ä–≤–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ: –°–∏—Å—Ç–µ–º—ã', description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–°–∏—Å—Ç–µ–º—ã –æ—Ä–≥–∞–Ω–∏–∑–º–∞"', icon: 'üß†' },
    { id: 'first_completion_diseases', title: '–ü–µ—Ä–≤–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ: –ó–∞–±–æ–ª–µ–≤–∞–Ω–∏—è', description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ó–∞–±–æ–ª–µ–≤–∞–Ω–∏—è"', icon: 'ü©∫' },
    { id: 'high_score_bones', title: '–ó–Ω–∞—Ç–æ–∫ –∫–æ—Å—Ç–µ–π', description: '–ü–æ–ª—É—á–∏—Ç–µ –±–æ–ª–µ–µ 80% –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ö–æ—Å—Ç–∏"', icon: 'üèÜ' },
    { id: 'high_score_muscles', title: '–ú–∞—Å—Ç–µ—Ä –º—ã—à—Ü', description: '–ü–æ–ª—É—á–∏—Ç–µ –±–æ–ª–µ–µ 80% –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ú—ã—à—Ü—ã"', icon: 'üèÜ' },
    { id: 'high_score_organs', title: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –æ—Ä–≥–∞–Ω–∞–º', description: '–ü–æ–ª—É—á–∏—Ç–µ –±–æ–ª–µ–µ 80% –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–û—Ä–≥–∞–Ω—ã"', icon: 'üèÜ' },
    { id: 'high_score_systems', title: '–§–∏–∑–∏–æ–ª–æ–≥', description: '–ü–æ–ª—É—á–∏—Ç–µ –±–æ–ª–µ–µ 80% –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–°–∏—Å—Ç–µ–º—ã –æ—Ä–≥–∞–Ω–∏–∑–º–∞"', icon: 'üèÜ' },
    { id: 'high_score_diseases', title: '–î–∏–∞–≥–Ω–æ—Å—Ç', description: '–ü–æ–ª—É—á–∏—Ç–µ –±–æ–ª–µ–µ 80% –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ó–∞–±–æ–ª–µ–≤–∞–Ω–∏—è"', icon: 'üèÜ' },
    { id: 'all_categories', title: '–ê–Ω–∞—Ç–æ–º', description: '–ü—Ä–æ–π–¥–∏—Ç–µ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã', icon: 'üë®‚Äç‚öïÔ∏è' },
    { id: 'perfect_score', title: '–ò–¥–µ–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç', description: '–û—Ç–≤–µ—Ç—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –ª—é–±–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', icon: 'üéØ' }
  ];

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const loadAchievements = () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–∑ localStorage
        const savedAchievementsString = localStorage.getItem('achievements') || '[]';
        const savedAchievementIds = JSON.parse(savedAchievementsString);
       
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        const unlockedAchievements = allAchievements.filter(achievement => 
          savedAchievementIds.includes(achievement.id)
        );
       
        setAchievements(unlockedAchievements);
        setLoading(false);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:', error);
        showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è');
        setLoading(false);
      }
    };

    loadAchievements();
  }, [showError]);

  return (
    <Panel id={id}>
      <PanelHeader left={<PanelHeaderBack onClick={() => go('home')} />}>
        –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
      </PanelHeader>
     
      {loading ? (
        <Div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '50vh'}}>
          <Text>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...</Text>
        </Div>
      ) : achievements.length > 0 ? (
        <Group>
          {achievements.map(achievement => (
            <Cell
              key={achievement.id}
              before={<Avatar size={40}>{achievement.icon}</Avatar>}
              description={achievement.description}
            >
              {achievement.title}
            </Cell>
          ))}
        </Group>
      ) : (
        <EmptyAchievements onPlayGame={() => go('categories')} />
      )}
    </Panel>
  );
 };

 export default Achievements;