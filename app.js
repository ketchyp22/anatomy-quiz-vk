// app.js - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —à–µ—Ä–∏–Ω–≥–æ–º –±–µ–∑ GitHub —Å—Å—ã–ª–æ–∫

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≥–æ—Å—Ç–µ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
function showGuestMode() {
    const userInfoElement = document.getElementById('user-info');
    if (!userInfoElement) return;

    window.currentUserData = {
        id: 'guest' + Math.floor(Math.random() * 10000),
        first_name: '–ì–æ—Å—Ç—å',
        last_name: '',
        photo_100: 'https://vk.com/images/camera_100.png'
    };

    userInfoElement.innerHTML = `
        <img src="${window.currentUserData.photo_100}" alt="${window.currentUserData.first_name}">
        <span>${window.currentUserData.first_name}</span>
    `;

    const userInfoQuizElement = document.getElementById('user-info-quiz');
    if (userInfoQuizElement) {
        userInfoQuizElement.innerHTML = userInfoElement.innerHTML;
    }

    console.log('–ó–∞–ø—É—â–µ–Ω –≥–æ—Å—Ç–µ–≤–æ–π —Ä–µ–∂–∏–º —Å ID:', window.currentUserData.id);
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã VK
function applyVKTheme(scheme) {
    console.log('–ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–µ–º–∞:', scheme);
    const isDarkTheme = ['space_gray', 'vkcom_dark'].includes(scheme);
    document.documentElement.classList.toggle('vk-dark-theme', isDarkTheme);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ (–∞–ª–≥–æ—Ä–∏—Ç–º –§–∏—à–µ—Ä–∞-–ô–µ–π—Ç—Å–∞)
function shuffleArray(array) {
    if (!Array.isArray(array) || array.length === 0) {
        console.error('–û—à–∏–±–∫–∞: shuffleArray –ø–æ–ª—É—á–∏–ª –Ω–µ–≤–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤');
        return [];
    }
    const newArray = [...array];
    for (let i = newArray.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
    }
    return newArray;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK Bridge
function initVKBridge() {
    let bridge = null;

    if (typeof vkBridge !== 'undefined') {
        bridge = vkBridge;
    } else if (typeof window.vkBridge !== 'undefined') {
        bridge = window.vkBridge;
    } else {
        console.warn('VK Bridge –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ –≥–æ—Å—Ç–µ–≤–æ–π —Ä–µ–∂–∏–º.');
        showGuestMode();
        return null;
    }

    try {
        bridge.send('VKWebAppInit')
            .then(() => {
                console.log('VK Bridge —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                window.vkBridgeInstance = bridge;
                return bridge.send('VKWebAppGetUserInfo');
            })
            .then((userData) => {
                console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã:', userData);
                window.currentUserData = userData;

                const userInfoElement = document.getElementById('user-info');
                if (userInfoElement) {
                    userInfoElement.innerHTML = `
                        <img src="${userData.photo_100}" alt="${userData.first_name}">
                        <span>${userData.first_name} ${userData.last_name || ''}</span>
                    `;
                }

                return bridge.send('VKWebAppGetConfig');
            })
            .then((config) => {
                console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', config);
                if (config && config.scheme) {
                    applyVKTheme(config.scheme);
                }
            })
            .catch((error) => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å VK Bridge:', error);
                showGuestMode();
            });

        bridge.subscribe((event) => {
            if (event.detail && event.detail.type === 'VKWebAppUpdateConfig') {
                applyVKTheme(event.detail.data.scheme);
            }
        });

        return bridge;
    } catch (e) {
        console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å VK Bridge:', e);
        showGuestMode();
        return null;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
var currentQuestion = 0;
var score = 0;
var selectedOption = null;
var questionsForQuiz = [];
var totalQuestionsToShow = 10;
var currentUserData = null;
var currentQuizMode = 'anatomy';
var currentDifficulty = 'easy';
var vkBridgeInstance = null;
var appLink = window.location.href;

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
var startScreen, quizContainer, resultsContainer;
var questionElement, optionsElement, progressBar, questionCounter, nextButton, exitQuizButton;
var scoreElement, userInfoElement, userInfoQuizElement, startQuizButton;
var shareResultsButton, restartQuizButton;

// –ñ–¥–µ–º –ø–æ–ª–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function () {
    console.log('DOM –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω');

    if (!window.questions) {
        console.error('–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è window.questions –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ questions.js –ø–æ–¥–∫–ª—é—á–µ–Ω.');
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª questions.js.');
        return;
    }

    vkBridgeInstance = initVKBridge();
    initializeApp();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initializeApp() {
    // –ü–æ–ª—É—á–∞–µ–º DOM —ç–ª–µ–º–µ–Ω—Ç—ã
    startScreen = document.getElementById('start-screen');
    quizContainer = document.getElementById('quiz-container');
    resultsContainer = document.getElementById('results-container');
    questionElement = document.getElementById('question');
    optionsElement = document.getElementById('options');
    progressBar = document.getElementById('progress-bar');
    questionCounter = document.getElementById('question-counter');
    nextButton = document.getElementById('next-question');
    exitQuizButton = document.getElementById('exit-quiz');
    scoreElement = document.getElementById('score');
    userInfoElement = document.getElementById('user-info');
    userInfoQuizElement = document.getElementById('user-info-quiz');
    startQuizButton = document.getElementById('start-quiz');
    shareResultsButton = document.getElementById('share-results');
    restartQuizButton = document.getElementById('restart-quiz');

    const difficultyButtons = document.querySelectorAll('.difficulty-btn');
    const quizModeButtons = document.querySelectorAll('.quiz-mode-btn');

    if (!startScreen || !quizContainer || !resultsContainer ||
        !questionElement || !optionsElement || !progressBar) {
        console.error('–û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ DOM');
    }

    if (!vkBridgeInstance && !window.vkBridgeInstance) {
        console.warn('VK Bridge –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ –≥–æ—Å—Ç–µ–≤–æ–π —Ä–µ–∂–∏–º.');
        showGuestMode();
    }

    // –í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    difficultyButtons.forEach(button => {
        button.addEventListener('click', function () {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º
            if (currentQuizMode === 'expert') {
                console.log('–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω - —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
                return;
            }
            
            difficultyButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            currentDifficulty = this.dataset.difficulty;
            console.log('–í—ã–±—Ä–∞–Ω —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:', currentDifficulty);
        });
    });

    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –∫–≤–∏–∑–∞
    setupModeSelection();

    if (startQuizButton) {
        startQuizButton.addEventListener('click', startQuiz);
    }

    if (exitQuizButton) {
        exitQuizButton.addEventListener('click', resetQuiz);
    }

    if (restartQuizButton) {
        restartQuizButton.addEventListener('click', resetQuiz);
    }

    if (nextButton) {
        nextButton.addEventListener('click', nextQuestion);
    }

    if (shareResultsButton) {
        shareResultsButton.addEventListener('click', shareResults);
    }
}

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–æ–≤
function setupModeSelection() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ —Ä–µ–∂–∏–º–æ–≤
    const modeContainer = document.querySelector('.quiz-mode-selection');
    if (!modeContainer) return;

    modeContainer.addEventListener('click', function(e) {
        const button = e.target.closest('.quiz-mode-btn');
        if (!button) return;

        e.preventDefault();
        e.stopPropagation();

        const mode = button.dataset.mode;
        if (!mode) return;

        console.log('üéØ –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º:', mode);

        // –°–Ω–∏–º–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        document.querySelectorAll('.quiz-mode-btn').forEach(btn => {
            btn.classList.remove('active');
        });

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
        button.classList.add('active');

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º
        currentQuizMode = mode;
        window.currentQuizMode = mode;

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º
        if (mode === 'expert') {
            currentDifficulty = 'expert';
            window.currentDifficulty = 'expert';
            console.log('üß† –≠–ö–°–ü–ï–†–¢–ù–´–ô –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ò–†–û–í–ê–ù');

            // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
            const difficultySection = document.querySelector('.difficulty-selection');
            if (difficultySection) {
                difficultySection.style.opacity = '0.5';
                difficultySection.style.pointerEvents = 'none';
                
                // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å –∫–Ω–æ–ø–æ–∫ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
                document.querySelectorAll('.difficulty-btn').forEach(btn => {
                    btn.classList.remove('active');
                });
            }
        } else {
            // –î–ª—è –æ–±—ã—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å
            const difficultySection = document.querySelector('.difficulty-selection');
            if (difficultySection) {
                difficultySection.style.opacity = '1';
                difficultySection.style.pointerEvents = 'auto';
                
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏–ª–∏ —Å—Ç–∞–≤–∏–º easy –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                const activeDifficultyBtn = document.querySelector('.difficulty-btn.active');
                if (!activeDifficultyBtn) {
                    const easyBtn = document.querySelector('.difficulty-btn[data-difficulty="easy"]');
                    if (easyBtn) {
                        easyBtn.classList.add('active');
                        currentDifficulty = 'easy';
                        window.currentDifficulty = 'easy';
                    }
                } else {
                    currentDifficulty = activeDifficultyBtn.dataset.difficulty;
                    window.currentDifficulty = currentDifficulty;
                }
            }
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
        const modeDescription = document.getElementById('mode-description');
        if (modeDescription && window.modeDescriptions && window.modeDescriptions[mode]) {
            if (mode === 'expert') {
                modeDescription.innerHTML = `
                    <div style="color: #ee5a24; font-weight: 600; font-size: 16px; margin-bottom: 8px;">
                        üß† –≠–ö–°–ü–ï–†–¢–ù–´–ô –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ò–†–û–í–ê–ù
                    </div>
                    <div style="font-size: 14px;">
                        ${window.modeDescriptions[mode]}
                    </div>
                `;
                modeDescription.style.cssText = `
                    background: linear-gradient(135deg, rgba(238, 90, 36, 0.1) 0%, rgba(255, 107, 107, 0.1) 100%);
                    border-left: 4px solid #ee5a24;
                `;
            } else {
                modeDescription.innerHTML = window.modeDescriptions[mode];
                modeDescription.style.cssText = '';
            }
            modeDescription.classList.add('active-description');
        }

        console.log('‚úÖ –†–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', {
            mode: currentQuizMode,
            difficulty: currentDifficulty
        });
    });

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º hover —ç—Ñ—Ñ–µ–∫—Ç—ã
    modeContainer.addEventListener('mouseover', function(e) {
        const button = e.target.closest('.quiz-mode-btn');
        if (!button || button.classList.contains('active')) return;

        const mode = button.dataset.mode;
        const modeDescription = document.getElementById('mode-description');
        if (modeDescription && window.modeDescriptions && window.modeDescriptions[mode]) {
            modeDescription.textContent = window.modeDescriptions[mode];
            modeDescription.classList.add('active-description');
        }
    });

    modeContainer.addEventListener('mouseout', function(e) {
        const button = e.target.closest('.quiz-mode-btn');
        if (!button || button.classList.contains('active')) return;

        const modeDescription = document.getElementById('mode-description');
        if (modeDescription) {
            modeDescription.classList.remove('active-description');
        }
    });
}

// –°–±—Ä–æ—Å –∫–≤–∏–∑–∞
function resetQuiz() {
    currentQuestion = 0;
    score = 0;
    selectedOption = null;
    questionsForQuiz = [];

    if (quizContainer) quizContainer.style.display = 'none';
    if (resultsContainer) resultsContainer.style.display = 'none';
    if (startScreen) startScreen.style.display = 'block';

    if (progressBar) progressBar.style.width = '0%';
    if (questionElement) questionElement.textContent = '';
    if (optionsElement) optionsElement.innerHTML = '';

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –µ—Å–ª–∏ –ù–ï —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º
    if (currentQuizMode !== 'expert') {
        const difficultySection = document.querySelector('.difficulty-selection');
        if (difficultySection) {
            difficultySection.style.opacity = '1';
            difficultySection.style.pointerEvents = 'auto';
        }
    }

    if (window.HintsSystem && window.HintsSystem.resetHintState) {
        window.HintsSystem.resetHintState();
    }
}

// –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
function selectQuestions() {
    if (!Array.isArray(window.questions)) {
        console.error('–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è window.questions –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º');
        return [];
    }
    
    console.log(`üéØ –í—ã–±–æ—Ä –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ä–µ–∂–∏–º–∞ "${currentQuizMode}", —Å–ª–æ–∂–Ω–æ—Å—Ç—å "${currentDifficulty}"`);

    let filteredQuestions = [];

    if (currentQuizMode === 'expert') {
        // –î–ª—è —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –±–µ—Ä–µ–º –í–°–ï —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
        filteredQuestions = window.questions.filter(q => q.mode === 'expert');
        console.log(`üß† –ù–∞–π–¥–µ–Ω–æ ${filteredQuestions.length} —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –í–°–ï`);
        
        if (filteredQuestions.length === 0) {
            console.warn('‚ö†Ô∏è –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.');
            filteredQuestions = window.questions.filter(q => q.mode === 'anatomy' && q.difficulty === 'hard').slice(0, 10);
        }
        
        return shuffleArray(filteredQuestions);
    } else {
        // –î–ª—è –æ–±—ã—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
        filteredQuestions = window.questions.filter(q =>
            q.mode === currentQuizMode && q.difficulty === currentDifficulty
        );
        console.log(`üìö –ù–∞–π–¥–µ–Ω–æ ${filteredQuestions.length} –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ä–µ–∂–∏–º–∞ "${currentQuizMode}", —Å–ª–æ–∂–Ω–æ—Å—Ç—å "${currentDifficulty}"`);
        
        const questionsLimit = 10;
        
        if (filteredQuestions.length === 0) {
            console.warn(`‚ö†Ô∏è –ù–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ä–µ–∂–∏–º–∞ "${currentQuizMode}" –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ "${currentDifficulty}". –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–∞—Ç–æ–º–∏—é.`);
            filteredQuestions = window.questions.filter(q => q.mode === 'anatomy' && q.difficulty === 'easy');
        }

        if (filteredQuestions.length <= questionsLimit) {
            console.log(`üìä –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ ${filteredQuestions.length} –≤–æ–ø—Ä–æ—Å–æ–≤`);
            return shuffleArray(filteredQuestions);
        }

        console.log(`üìù –í—ã–±–∏—Ä–∞–µ–º ${questionsLimit} –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–∑ ${filteredQuestions.length} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö`);
        return shuffleArray(filteredQuestions).slice(0, questionsLimit);
    }
}

// –ù–∞—á–∞–ª–æ –∫–≤–∏–∑–∞
function startQuiz() {
    console.log("üöÄ –ù–∞—á–∞–ª–æ –∫–≤–∏–∑–∞");
    
    document.dispatchEvent(new CustomEvent('quizStarted', {
        detail: {
            mode: currentQuizMode,
            difficulty: currentDifficulty
        }
    }));
    
    if (!startScreen || !quizContainer) {
        console.error('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã DOM');
        return;
    }
    
    startScreen.style.display = 'none';
    quizContainer.style.display = 'block';
    currentQuestion = 0;
    score = 0;
    console.log(`üéØ –ó–∞–ø—É—Å–∫ –∫–≤–∏–∑–∞ "${currentQuizMode}", —Å–ª–æ–∂–Ω–æ—Å—Ç—å "${currentDifficulty}"`);

    questionsForQuiz = selectQuestions();
    console.log(`üìù –í—ã–±—Ä–∞–Ω–æ ${questionsForQuiz.length} –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∫–≤–∏–∑–∞`);

    if (questionsForQuiz.length === 0) {
        console.error('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –∫–≤–∏–∑–∞');
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
        return;
    }

    if (userInfoElement && userInfoQuizElement) {
        userInfoQuizElement.innerHTML = userInfoElement.innerHTML;
    }

    loadQuestion();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–∞
function loadQuestion() {
    console.log(`üìñ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ ${currentQuestion + 1} –∏–∑ ${questionsForQuiz.length}`);
    
    document.dispatchEvent(new CustomEvent('questionLoaded', {
        detail: {
            questionIndex: currentQuestion,
            totalQuestions: questionsForQuiz.length,
            questionData: questionsForQuiz[currentQuestion]
        }
    }));
    
    if (!questionElement || !optionsElement || !questionCounter || !progressBar) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–æ–ø—Ä–æ—Å–∞: —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }
    
    if (!Array.isArray(questionsForQuiz) || questionsForQuiz.length === 0) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–æ–ø—Ä–æ—Å–∞: –º–∞—Å—Å–∏–≤ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø—É—Å—Ç');
        return;
    }
    
    selectedOption = null;
    if (nextButton) nextButton.disabled = true;
    
    if (currentQuestion >= questionsForQuiz.length) {
        console.error('–û—à–∏–±–∫–∞: –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –º–∞—Å—Å–∏–≤–∞');
        return;
    }
    
    const question = questionsForQuiz[currentQuestion];

    questionElement.textContent = question.text;
    questionCounter.textContent = `–í–æ–ø—Ä–æ—Å ${currentQuestion + 1} –∏–∑ ${questionsForQuiz.length}`;
    const progress = ((currentQuestion) / questionsForQuiz.length) * 100;
    progressBar.style.width = `${progress}%`;

    optionsElement.innerHTML = '';
    if (Array.isArray(question.options)) {
        question.options.forEach((option, index) => {
            const optionElement = document.createElement('div');
            optionElement.classList.add('option');
            optionElement.textContent = option;
            optionElement.dataset.index = index;
            optionElement.addEventListener('click', selectOption);
            optionsElement.appendChild(optionElement);
        });
    } else {
        console.error('–û—à–∏–±–∫–∞: –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º');
    }
}

// –í—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
function selectOption(e) {
    if (!nextButton) return;
    
    const selectedIndex = parseInt(e.target.dataset.index);
    selectedOption = selectedIndex;

    const options = document.querySelectorAll('.option');
    options.forEach(option => option.classList.remove('selected'));
    e.target.classList.add('selected');

    document.dispatchEvent(new CustomEvent('answerSelected', {
        detail: {
            selectedIndex: selectedIndex,
            questionData: questionsForQuiz[currentQuestion]
        }
    }));

    nextButton.disabled = false;
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
function nextQuestion() {
    if (selectedOption === null || !Array.isArray(questionsForQuiz) ||
        currentQuestion >= questionsForQuiz.length) {
        return;
    }

    nextButton.disabled = true;

    const correct = questionsForQuiz[currentQuestion].correctOptionIndex;
    const isCorrect = selectedOption === correct;
    
    if (isCorrect) {
        score++;
    }

    document.dispatchEvent(new CustomEvent('answerResult', {
        detail: { 
            correct: isCorrect,
            selectedIndex: selectedOption,
            correctIndex: correct,
            questionData: questionsForQuiz[currentQuestion]
        }
    }));

    const options = document.querySelectorAll('.option');
    
    if (options[correct]) {
        options[correct].classList.add('correct');
    }
    if (selectedOption !== correct && options[selectedOption]) {
        options[selectedOption].classList.add('wrong');
    }

    options.forEach(option => {
        option.removeEventListener('click', selectOption);
        option.style.pointerEvents = 'none';
    });

    setTimeout(() => {
        currentQuestion++;
        if (currentQuestion < questionsForQuiz.length) {
            loadQuestion();
        } else {
            showResults();
        }
    }, 1500);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function showResults() {
    if (!quizContainer || !resultsContainer || !scoreElement) {
        console.error('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã DOM');
        return;
    }
    
    quizContainer.style.display = 'none';
    resultsContainer.style.display = 'block';
    const percentage = Math.round((score / questionsForQuiz.length) * 100);

    const difficultyBadge = document.getElementById('difficulty-badge');
    if (difficultyBadge) {
        if (currentQuizMode === 'expert') {
            difficultyBadge.textContent = 'üß† –≠–ö–°–ü–ï–†–¢–ù–´–ô –£–†–û–í–ï–ù–¨';
            difficultyBadge.classList.add('expert');
            difficultyBadge.style.background = 'linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%)';
            difficultyBadge.style.color = 'white';
        } else {
            difficultyBadge.textContent = currentDifficulty === 'hard' ? '–°–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å' : '–û–±—ã—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å';
            if (currentDifficulty === 'hard') {
                difficultyBadge.classList.add('hard');
            } else {
                difficultyBadge.classList.remove('hard');
            }
        }
    }

    const modeBadge = document.getElementById('mode-badge');
    if (modeBadge) {
        let modeText = '–ê–Ω–∞—Ç–æ–º–∏—è';
        if (currentQuizMode === 'clinical') modeText = '–ö–ª–∏–Ω–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ';
        if (currentQuizMode === 'pharmacology') modeText = '–§–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è';
        if (currentQuizMode === 'first_aid') modeText = '–ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å';
        if (currentQuizMode === 'obstetrics') modeText = '–ê–∫—É—à–µ—Ä—Å—Ç–≤–æ';
        if (currentQuizMode === 'expert') modeText = 'üß† –≠–ö–°–ü–ï–†–¢';
        modeBadge.textContent = modeText;
    }

    const percentageElement = document.getElementById('percentage');
    if (percentageElement) {
        percentageElement.textContent = percentage;
    }
    
    const correctAnswersElement = document.getElementById('correct-answers');
    if (correctAnswersElement) {
        correctAnswersElement.textContent = score;
    }
    
    const totalQuestionsElement = document.getElementById('total-questions-result');
    if (totalQuestionsElement) {
        totalQuestionsElement.textContent = questionsForQuiz.length;
    }

    const scorePercentageElement = document.querySelector('.score-percentage');
    if (scorePercentageElement) {
        scorePercentageElement.classList.remove('excellent', 'good', 'average', 'poor');
        if (percentage >= 90) {
            scorePercentageElement.classList.add('excellent');
        } else if (percentage >= 70) {
            scorePercentageElement.classList.add('good');
        } else if (percentage >= 50) {
            scorePercentageElement.classList.add('average');
        } else {
            scorePercentageElement.classList.add('poor');
        }
    }

    const scoreTextElement = document.querySelector('.score-text');
    if (scoreTextElement) {
        let resultText;
        if (currentQuizMode === 'expert') {
            if (percentage >= 90) {
                resultText = 'üß† –ù–ï–í–ï–†–û–Ø–¢–ù–û! –í—ã - –∏—Å—Ç–∏–Ω–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –º–µ–¥–∏—Ü–∏–Ω—ã!';
            } else if (percentage >= 70) {
                resultText = 'üî• –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è!';
            } else if (percentage >= 50) {
                resultText = 'üí™ –•–æ—Ä–æ—à–∏–π —É—Ä–æ–≤–µ–Ω—å, –Ω–æ –µ—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏!';
            } else {
                resultText = 'üìö –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –æ—á–µ–Ω—å —Å–ª–æ–∂–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–∑—É—á–∞—Ç—å!';
            }
        } else {
            if (percentage >= 90) {
                resultText = '–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! –í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —ç–∫—Å–ø–µ—Ä—Ç!';
            } else if (percentage >= 70) {
                resultText = '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—ã —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–µ—Ç–µ –ø—Ä–µ–¥–º–µ—Ç!';
            } else if (percentage >= 50) {
                resultText = '–ù–µ–ø–ª–æ—Ö–æ! –ù–æ –µ—Å—Ç—å –Ω–∞–¥ —á–µ–º –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å.';
            } else {
                resultText = '–°—Ç–æ–∏—Ç –ø–æ–¥—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª, –Ω–æ –≤—ã —É–∂–µ –Ω–∞ –ø—É—Ç–∏ –∫ –∑–Ω–∞–Ω–∏—è–º!';
            }
        }
        scoreTextElement.innerHTML = `<span class="result-text">${resultText}</span>`;
    }

    document.dispatchEvent(new CustomEvent('quizCompleted', {
        detail: { 
            score: score, 
            total: questionsForQuiz.length, 
            percentage: percentage,
            mode: currentQuizMode,
            difficulty: currentDifficulty
        }
    }));
}

// –£–ú–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è —à–µ—Ä–∏–Ω–≥–∞ —Å –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º VK —Å—Å—ã–ª–∫–∏
function shareResults() {
    console.log('üì§ –£–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è shareResults —Å VK —Å—Å—ã–ª–∫–æ–π');
    
    const percentage = Math.round((score / questionsForQuiz.length) * 100);
    let modeText = '–ê–Ω–∞—Ç–æ–º–∏—è';
    if (currentQuizMode === 'clinical') modeText = '–ö–ª–∏–Ω–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ';
    if (currentQuizMode === 'pharmacology') modeText = '–§–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è';
    if (currentQuizMode === 'first_aid') modeText = '–ü–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å';
    if (currentQuizMode === 'obstetrics') modeText = '–ê–∫—É—à–µ—Ä—Å—Ç–≤–æ';
    if (currentQuizMode === 'expert') modeText = 'üß† –≠–ö–°–ü–ï–†–¢–ù–´–ô –£–†–û–í–ï–ù–¨';
    
    const difficultyText = currentQuizMode === 'expert' ? '—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å' : 
                          (currentDifficulty === 'hard' ? '—Å–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å' : '–æ–±—ã—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å');
    
    const message = `ü©∫ –ü—Ä–æ—à–µ–ª –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–≤–∏–∑ –∏ –Ω–∞–±—Ä–∞–ª ${percentage}%!\n\n‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${score} –∏–∑ ${questionsForQuiz.length}\nüìã –†–µ–∂–∏–º: ${modeText}\nüéØ –£—Ä–æ–≤–µ–Ω—å: ${difficultyText}\n\n${getMotivationMessage(percentage)}\n\nüí™ –ê —Ç—ã —Å–º–æ–∂–µ—à—å –ª—É—á—à–µ?`;

    const bridge = vkBridgeInstance || window.vkBridgeInstance;
    
    if (!bridge) {
        console.warn('VK Bridge –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.');
        showShareText(message + '\n\n–ü–æ–ø—Ä–æ–±—É–π MedQuiz Pro!');
        return;
    }

    // –£–º–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const appLink = getSmartAppLink();
    
    const shareParams = {
        text: message
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ VK –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if (appLink && appLink.includes('vk.com')) {
        shareParams.link = appLink;
        console.log('üì§ –®–µ—Ä–∏–º —Å VK —Å—Å—ã–ª–∫–æ–π:', appLink);
    } else {
        console.log('üì§ –®–µ—Ä–∏–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç (GitHub –æ–∫—Ä—É–∂–µ–Ω–∏–µ)');
    }
    
    bridge.send('VKWebAppShare', shareParams)
        .then(data => {
            console.log('‚úÖ –ü–æ–¥–µ–ª–∏–ª–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º:', data);
            showShareSuccess();
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —à–µ—Ä–∏–Ω–≥–µ:', error);
            
            // Fallback - —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –±–µ–∑ —Å—Å—ã–ª–∫–∏
            bridge.send('VKWebAppShare', { text: message })
                .then(() => showShareSuccess())
                .catch(() => showShareText(message + '\n\n–ù–∞–π–¥–∏ MedQuiz Pro –≤–æ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ!'));
        });
}

// –§—É–Ω–∫—Ü–∏—è —É–º–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function getSmartAppLink() {
    const currentUrl = window.location.href;
    
    console.log('üîç –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Å—ã–ª–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è:', currentUrl);
    
    // –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ VK Mini Apps
    if (currentUrl.includes('vk.com/app')) {
        const baseLink = currentUrl.split('?')[0].split('#')[0];
        console.log('‚úÖ VK –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ:', baseLink);
        return baseLink;
    }
    
    // –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –≤ –º–æ–±–∏–ª—å–Ω–æ–º VK –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    if (window.vkBridgeInstance && currentUrl.includes('vk.com')) {
        console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω–æ–µ VK –æ–∫—Ä—É–∂–µ–Ω–∏–µ');
        return currentUrl.split('?')[0].split('#')[0];
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ GitHub Pages –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ö–æ—Å—Ç–∏–Ω–≥
    if (currentUrl.includes('github.io') || currentUrl.includes('localhost')) {
        console.log('‚ö†Ô∏è GitHub/localhost –æ–∫—Ä—É–∂–µ–Ω–∏–µ - —Å—Å—ã–ª–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è');
        return null;
    }
    
    // –î–ª—è –ª—é–±–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ —Å–ª—É—á–∞—è - –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É
    console.log('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ - —Å—Å—ã–ª–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è');
    return null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
function getMotivationMessage(percentage) {
    if (percentage >= 90) {
        return 'üèÜ –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ù–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª!';
    } else if (percentage >= 70) {
        return 'üëè –•–æ—Ä–æ—à–∏–π —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π!';
    } else if (percentage >= 50) {
        return 'üìö –ï—Å—Ç—å –±–∞–∑–∞, –Ω–æ –º–æ–∂–Ω–æ –µ—â–µ –ø–æ–¥—É—á–∏—Ç—å—Å—è!';
    } else {
        return 'üí™ –ù–∞—á–∞–ª–æ –ø–æ–ª–æ–∂–µ–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–∑—É—á–∞—Ç—å –º–µ–¥–∏—Ü–∏–Ω—É!';
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
function showShareText(message) {
    const modal = document.createElement('div');
    modal.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100%; height: 100%;
        background: rgba(0, 0, 0, 0.8); display: flex; align-items: center;
        justify-content: center; z-index: 10000;
    `;
    
    const dialog = document.createElement('div');
    dialog.style.cssText = `
        background: white; border-radius: 20px; padding: 30px; max-width: 400px;
        width: 90%; text-align: center;
    `;
    
    dialog.innerHTML = `
        <h3 style="margin: 0 0 20px 0; color: #333;">üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º</h3>
        <p style="color: #666; margin-bottom: 15px;">
            –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∏–º –≤ VK –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö:
        </p>
        <textarea readonly style="width: 100%; height: 120px; padding: 15px; border: 1px solid #ddd; border-radius: 10px; font-size: 14px; resize: none; margin-bottom: 20px;">${message}</textarea>
        <button onclick="copyToClipboard('${message.replace(/'/g, "\\'")}'); this.parentElement.parentElement.remove();" style="background: #5a67d8; color: white; border: none; padding: 12px 24px; border-radius: 10px; cursor: pointer; margin-right: 10px;">üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
        <button onclick="this.parentElement.parentElement.remove();" style="background: #6c757d; color: white; border: none; padding: 12px 24px; border-radius: 10px; cursor: pointer;">–ó–∞–∫—Ä—ã—Ç—å</button>
    `;
    
    modal.appendChild(dialog);
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) modal.remove();
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ø–µ—à–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showShareSuccess() {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed; top: 20px; right: 20px; background: #10B981;
        color: white; padding: 15px 20px; border-radius: 10px;
        z-index: 10001;
    `;
    notification.textContent = '‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!';
    
    document.body.appendChild(notification);
    setTimeout(() => notification.remove(), 3000);
}

// –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard(text) {
    if (navigator.clipboard) {
        navigator.clipboard.writeText(text).then(() => {
            showShareSuccess();
        });
    } else {
        const textArea = document.createElement('textarea');
        textArea.value = text;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
        showShareSuccess();
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
window.getCurrentQuestion = function() {
    return currentQuestion;
};

window.getQuestionsForQuiz = function() {
    return questionsForQuiz;
};

window.getCurrentQuestionData = function() {
    if (questionsForQuiz && currentQuestion < questionsForQuiz.length) {
        return questionsForQuiz[currentQuestion];
    }
    return null;
};

window.setExpertMode = function() {
    window.currentQuizMode = 'expert';
    window.currentDifficulty = 'expert';
    currentQuizMode = 'expert';
    currentDifficulty = 'expert';
    console.log('üß† –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ');
};

window.getQuizMode = function() {
    return {
        mode: currentQuizMode,
        difficulty: currentDifficulty,
        globalMode: window.currentQuizMode,
        globalDifficulty: window.currentDifficulty
    };
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.debugQuiz = {
    getCurrentQuestion: () => currentQuestion,
    getQuestionsForQuiz: () => questionsForQuiz,
    getCurrentQuestionData: () => window.getCurrentQuestionData(),
    getScore: () => score,
    getSelectedOption: () => selectedOption,
    getCurrentMode: () => currentQuizMode,
    getCurrentDifficulty: () => currentDifficulty,
    
    testExpertMode: () => {
        currentQuizMode = 'expert';
        currentDifficulty = 'expert';
        window.currentQuizMode = 'expert';
        window.currentDifficulty = 'expert';
        console.log('üß† –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
        const expertQuestions = selectQuestions();
        console.log(`–ù–∞–π–¥–µ–Ω–æ ${expertQuestions.length} —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:`, expertQuestions);
    },
    
    checkExpertQuestions: () => {
        const expertQuestions = window.questions ? window.questions.filter(q => q.mode === 'expert') : [];
        console.log(`üß† –í—Å–µ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –±–∞–∑–µ: ${expertQuestions.length}`);
        return expertQuestions;
    },
    
    forceExpertMode: () => {
        window.setExpertMode();
        const expertBtn = document.querySelector('.expert-mode-btn, .quiz-mode-btn[data-mode="expert"]');
        if (expertBtn) {
            document.querySelectorAll('.quiz-mode-btn').forEach(btn => btn.classList.remove('active'));
            expertBtn.classList.add('active');
            
            const difficultySection = document.querySelector('.difficulty-selection');
            if (difficultySection) {
                difficultySection.style.opacity = '0.5';
                difficultySection.style.pointerEvents = 'none';
            }
        }
        console.log('üß† –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
    },
    
    skipToResults: () => {
        score = Math.floor(Math.random() * questionsForQuiz.length);
        showResults();
    },
    
    resetQuiz: () => resetQuiz(),
    
    getState: () => ({
        currentQuestion,
        score,
        selectedOption,
        currentQuizMode,
        currentDifficulty,
        questionsCount: questionsForQuiz.length,
        expertQuestionsAvailable: window.questions ? window.questions.filter(q => q.mode === 'expert').length : 0
    }),

    // –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤
    testModeSwitch: () => {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤...');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞—Ç–æ–º–∏—é
        const anatomyBtn = document.querySelector('.quiz-mode-btn[data-mode="anatomy"]');
        if (anatomyBtn) {
            anatomyBtn.click();
            console.log('–ê–Ω–∞—Ç–æ–º–∏—è:', { mode: currentQuizMode, difficulty: currentDifficulty });
        }
        
        setTimeout(() => {
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º
            const expertBtn = document.querySelector('.quiz-mode-btn[data-mode="expert"]');
            if (expertBtn) {
                expertBtn.click();
                console.log('–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π:', { mode: currentQuizMode, difficulty: currentDifficulty });
            }
            
            setTimeout(() => {
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∞–Ω–∞—Ç–æ–º–∏–∏
                if (anatomyBtn) {
                    anatomyBtn.click();
                    console.log('–ê–Ω–∞—Ç–æ–º–∏—è —Å–Ω–æ–≤–∞:', { mode: currentQuizMode, difficulty: currentDifficulty });
                }
            }, 1000);
        }, 1000);
    },

    // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–µ—Ä–∏–Ω–≥–∞
    testShare: () => {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —à–µ—Ä–∏–Ω–≥–∞...');
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        score = 8;
        questionsForQuiz = new Array(10).fill({});
        currentQuizMode = 'anatomy';
        currentDifficulty = 'easy';
        
        shareResults();
    }
};

console.log('‚úÖ app.js –∑–∞–≥—Ä—É–∂–µ–Ω —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º —à–µ—Ä–∏–Ω–≥–æ–º –ë–ï–ó GitHub —Å—Å—ã–ª–æ–∫');
console.log('üêõ –î–æ—Å—Ç—É–ø–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏: window.debugQuiz');
