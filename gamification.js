// gamification.js - –ú–æ–¥—É–ª—å –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥)
(function() {
    'use strict';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    if (typeof window.questions === 'undefined') {
        console.warn('Gamification module: –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ');
        return;
    }

    // –°–æ–∑–¥–∞–µ–º namespace –¥–ª—è –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏
    window.Gamification = {
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        settings: {
            soundEnabled: true,
            animationsEnabled: true,
            confettiEnabled: true
        },
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        stats: {
            totalQuizzes: 0,
            correctAnswers: 0,
            currentStreak: 0,
            bestStreak: 0,
            achievements: [],
            totalPlayTime: 0
        },
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ localStorage
        loadStats: function() {
            const saved = localStorage.getItem('medicalQuizStats');
            if (saved) {
                this.stats = {...this.stats, ...JSON.parse(saved)};
            }
        },
        
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        saveStats: function() {
            localStorage.setItem('medicalQuizStats', JSON.stringify(this.stats));
        },
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
        init: function() {
            console.log('üéÆ –ú–æ–¥—É–ª—å –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—É—â–µ–Ω');
            this.loadStats();
            this.addStatsDisplay();
            this.hookIntoQuizEvents();
            this.loadSounds();
        },
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        addStatsDisplay: function() {
            const startScreen = document.getElementById('start-screen');
            if (!startScreen) return;
            
            const statsContainer = document.createElement('div');
            statsContainer.id = 'gamification-stats';
            statsContainer.className = 'gamification-stats';
            statsContainer.innerHTML = `
                <div class="stats-card">
                    <div class="stat-item">
                        <span class="stat-number">${this.stats.totalQuizzes}</span>
                        <span class="stat-label">–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">${this.stats.currentStreak}üî•</span>
                        <span class="stat-label">–¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">${this.stats.bestStreak}‚≠ê</span>
                        <span class="stat-label">–õ—É—á—à–∞—è —Å–µ—Ä–∏—è</span>
                    </div>
                </div>
            `;
            
            // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            const userInfo = startScreen.querySelector('.user-info');
            if (userInfo) {
                userInfo.parentNode.insertBefore(statsContainer, userInfo.nextSibling);
            } else {
                startScreen.insertBefore(statsContainer, startScreen.firstChild);
            }
        },
        
        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–æ–±—ã—Ç–∏—è–º –∫–≤–∏–∑–∞
        hookIntoQuizEvents: function() {
            // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
            this.interceptOptionClick();
            // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–∏–∑–∞
            this.interceptQuizComplete();
        },
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç –∫–ª–∏–∫–æ–≤ –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º –æ—Ç–≤–µ—Ç–æ–≤
        interceptOptionClick: function() {
            const originalShowResults = window.showResults;
            const self = this;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            document.addEventListener('click', function(e) {
                if (e.target.classList.contains('option') && e.target.classList.contains('correct')) {
                    self.onCorrectAnswer();
                } else if (e.target.classList.contains('option') && e.target.classList.contains('wrong')) {
                    self.onWrongAnswer();
                }
            });
        },
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–∏–∑–∞
        interceptQuizComplete: function() {
            // –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–∏–∑–∞
            document.addEventListener('quizCompleted', (e) => {
                this.onQuizComplete(e.detail);
            });
        },
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        onCorrectAnswer: function() {
            this.stats.correctAnswers++;
            this.stats.currentStreak++;
            
            if (this.stats.currentStreak > this.stats.bestStreak) {
                this.stats.bestStreak = this.stats.currentStreak;
                this.showAchievement(`–ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥! ${this.stats.bestStreak} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–¥—Ä—è–¥! üèÜ`);
            }
            
            this.playSound('correct');
            this.showStreakIndicator();
            this.saveStats();
        },
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        onWrongAnswer: function() {
            this.stats.currentStreak = 0;
            this.playSound('wrong');
            this.saveStats();
        },
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–∏–∑–∞
        onQuizComplete: function(results) {
            this.stats.totalQuizzes++;
            
            const percentage = results.percentage || 0;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –¥–ª—è –æ—Ç–ª–∏—á–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            if (percentage >= 90 && this.settings.confettiEnabled) {
                this.showConfetti();
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
            this.checkAchievements(results);
            this.updateStatsDisplay();
            this.saveStats();
        },
        
        // –ü–æ–∫–∞–∑ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Å–µ—Ä–∏–∏
        showStreakIndicator: function() {
            if (this.stats.currentStreak < 3) return;
            
            const indicator = document.createElement('div');
            indicator.className = 'streak-indicator';
            indicator.innerHTML = `üî• ${this.stats.currentStreak} –ø–æ–¥—Ä—è–¥!`;
            
            document.body.appendChild(indicator);
            
            setTimeout(() => {
                indicator.classList.add('show');
            }, 100);
            
            setTimeout(() => {
                indicator.classList.remove('show');
                setTimeout(() => document.body.removeChild(indicator), 300);
            }, 2000);
        },
        
        // –ü–æ–∫–∞–∑ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        showAchievement: function(text) {
            const achievement = document.createElement('div');
            achievement.className = 'achievement-popup';
            achievement.innerHTML = `
                <div class="achievement-content">
                    <div class="achievement-icon">üèÜ</div>
                    <div class="achievement-text">${text}</div>
                </div>
            `;
            
            document.body.appendChild(achievement);
            
            setTimeout(() => {
                achievement.classList.add('show');
            }, 100);
            
            setTimeout(() => {
                achievement.classList.remove('show');
                setTimeout(() => document.body.removeChild(achievement), 500);
            }, 3000);
        },
        
        // –ö–æ–Ω—Ñ–µ—Ç—Ç–∏
        showConfetti: function() {
            for (let i = 0; i < 50; i++) {
                this.createConfettiPiece();
            }
        },
        
        createConfettiPiece: function() {
            const confetti = document.createElement('div');
            confetti.className = 'confetti-piece';
            confetti.style.left = Math.random() * 100 + '%';
            confetti.style.backgroundColor = this.getRandomColor();
            confetti.style.animationDelay = Math.random() * 3 + 's';
            
            document.body.appendChild(confetti);
            
            setTimeout(() => {
                if (confetti.parentNode) {
                    confetti.parentNode.removeChild(confetti);
                }
            }, 4000);
        },
        
        getRandomColor: function() {
            const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#fd79a8'];
            return colors[Math.floor(Math.random() * colors.length)];
        },
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–≤—É–∫–æ–≤
        loadSounds: function() {
            this.sounds = {
                correct: this.createBeep(800, 0.1),
                wrong: this.createBeep(300, 0.2),
                achievement: this.createBeep(1200, 0.3)
            };
        },
        
        // –°–æ–∑–¥–∞–Ω–∏–µ –∑–≤—É–∫–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞
        createBeep: function(frequency, duration) {
            return function() {
                if (!window.Gamification.settings.soundEnabled) return;
                
                const audioContext = new (window.AudioContext || window.webkitAudioContext)();
                const oscillator = audioContext.createOscillator();
                const gainNode = audioContext.createGain();
                
                oscillator.connect(gainNode);
                gainNode.connect(audioContext.destination);
                
                oscillator.frequency.value = frequency;
                oscillator.type = 'sine';
                
                gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
                gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration);
                
                oscillator.start(audioContext.currentTime);
                oscillator.stop(audioContext.currentTime + duration);
            };
        },
        
        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞
        playSound: function(type) {
            if (this.sounds && this.sounds[type]) {
                try {
                    this.sounds[type]();
                } catch (e) {
                    console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–≤—É–∫:', e);
                }
            }
        },
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        checkAchievements: function(results) {
            const percentage = results.percentage || 0;
            const newAchievements = [];
            
            // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
            if (percentage === 100 && !this.stats.achievements.includes('perfectionist')) {
                this.stats.achievements.push('perfectionist');
                newAchievements.push('–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç: 100% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤! üéØ');
            }
            
            if (percentage >= 90 && !this.stats.achievements.includes('expert')) {
                this.stats.achievements.push('expert');
                newAchievements.push('–≠–∫—Å–ø–µ—Ä—Ç: 90%+ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤! üß†');
            }
            
            // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
            if (this.stats.totalQuizzes >= 10 && !this.stats.achievements.includes('dedicated')) {
                this.stats.achievements.push('dedicated');
                newAchievements.push('–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–π: 10 –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤! üí™');
            }
            
            if (this.stats.totalQuizzes >= 50 && !this.stats.achievements.includes('veteran')) {
                this.stats.achievements.push('veteran');
                newAchievements.push('–í–µ—Ç–µ—Ä–∞–Ω: 50 –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤! üèÖ');
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
            newAchievements.forEach((achievement, index) => {
                setTimeout(() => {
                    this.showAchievement(achievement);
                    this.playSound('achievement');
                }, index * 1000);
            });
        },
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∏—Å–ø–ª–µ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        updateStatsDisplay: function() {
            const statsContainer = document.getElementById('gamification-stats');
            if (statsContainer) {
                const numbers = statsContainer.querySelectorAll('.stat-number');
                if (numbers[0]) numbers[0].textContent = this.stats.totalQuizzes;
                if (numbers[1]) numbers[1].textContent = this.stats.currentStreak + 'üî•';
                if (numbers[2]) numbers[2].textContent = this.stats.bestStreak + '‚≠ê';
            }
        },
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
        addMotivationalMessage: function(percentage) {
            let message = '';
            let icon = '';
            
            if (percentage === 100) {
                message = '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –ò–¥–µ–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª!';
                icon = 'üèÜ';
            } else if (percentage >= 90) {
                message = '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –í—ã –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ –≥–ª—É–±–æ–∫–∏–µ –∑–Ω–∞–Ω–∏—è!';
                icon = 'üåü';
            } else if (percentage >= 80) {
                message = '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏!';
                icon = 'üëè';
            } else if (percentage >= 70) {
                message = '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–∑—É—á–∞—Ç—å!';
                icon = 'üí™';
            } else if (percentage >= 50) {
                message = '–ù–µ–ø–ª–æ—Ö–æ! –ï—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏, –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ—Å—å!';
                icon = 'üìö';
            } else {
                message = '–ù–∞—á–∞–ª–æ –ø–æ–ª–æ–∂–µ–Ω–æ! –ü—Ä–∞–∫—Ç–∏–∫–∞ - –ø—É—Ç—å –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É!';
                icon = 'üöÄ';
            }
            
            return { message, icon };
        }
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
    document.addEventListener('DOMContentLoaded', function() {
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ–ª–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è
        setTimeout(() => {
            window.Gamification.init();
        }, 100);
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
    window.triggerQuizCompleted = function(score, total, percentage) {
        const event = new CustomEvent('quizCompleted', {
            detail: { score, total, percentage }
        });
        document.dispatchEvent(event);
    };
    
})();
