// –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ï CDN –≤–∏–¥–µ–æ
        const sources = [
            // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤–∏–¥–µ–æ –∏–∑ CDN:
            'https://assets.mixkit.co/videos/preview/mixkit-red-and-blue-sirens-of-an-ambulance-4107-large.mp4',  // –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å
            'https://assets.mixkit.co/videos/preview/mixkit-doctor-writing-on-clipboard-4166-large.mp4',  // –í—Ä–∞—á
            'https://assets.mixkit.co/videos/preview/mixkit-hospital-corridor-4163-large.mp4',  // –ö–æ—Ä–∏–¥–æ—Ä –±–æ–ª—å–Ω–∏—Ü—ã
            'https://assets.mixkit.co/videos/preview/mixkit-medical-equipment-in-hospital-4273-large.mp4',  // –ú–µ–¥–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
            'https://assets.mixkit.co/videos/preview/mixkit-ambul// ambulance-video-background.js - –†–ê–ë–û–¢–ê–Æ–©–ê–Ø –≤–µ—Ä—Å–∏—è –¥–ª—è VK
(function() {
    'use strict';
    
    console.log('üé¨ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –†–ê–ë–û–¢–ê–Æ–©–ò–ô –≤–∏–¥–µ–æ —Ñ–æ–Ω...');

    function createVideoBackground() {
        const container = document.createElement('div');
        container.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -2;
            overflow: hidden;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        `;

        const video = document.createElement('video');
        video.id = 'ambulance-video';
        video.autoplay = true;
        video.muted = true;
        video.loop = true;
        video.playsInline = true;
        video.crossOrigin = 'anonymous';
        video.style.cssText = `
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 100%;
            height: 100%;
            object-fit: cover;
            opacity: 0.5;
            filter: blur(1px) brightness(0.8);
        `;

        // –û–î–ù–ê –†–ê–ë–û–ß–ê–Ø –°–°–´–õ–ö–ê
        video.src = 'https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4';
        
        console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞–±–æ—á–µ–µ –≤–∏–¥–µ–æ...');
        video.load();

        video.onloadeddata = function() {
            console.log('‚úÖ –í–ò–î–ï–û –ó–ê–ì–†–£–ñ–ï–ù–û!');
            video.play()
                .then(() => {
                    console.log('‚ñ∂Ô∏è –í–ò–î–ï–û –ó–ê–ü–£–©–ï–ù–û!');
                    showSuccess();
                })
                .catch(err => {
                    console.warn('‚ö†Ô∏è –ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:', err);
                    showPlayButton();
                });
        };

        video.onerror = function() {
            console.error('‚ùå –û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò –í–ò–î–ï–û!');
            showError();
        };

        function showPlayButton() {
            const button = document.createElement('button');
            button.innerHTML = 'üé¨ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–∏–¥–µ–æ —Ñ–æ–Ω';
            button.style.cssText = `
                position: fixed;
                bottom: 20px;
                right: 20px;
                background: #ff6b6b;
                color: white;
                border: none;
                padding: 15px 25px;
                border-radius: 10px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                z-index: 9999;
                box-shadow: 0 4px 15px rgba(0,0,0,0.3);
            `;
            
            button.onclick = () => {
                video.play().then(() => {
                    button.remove();
                    console.log('‚úÖ –í–ò–î–ï–û –ó–ê–ü–£–©–ï–ù–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú!');
                });
            };
            
            document.body.appendChild(button);
        }

        function showSuccess() {
            const status = document.createElement('div');
            status.innerHTML = '‚úÖ –í–∏–¥–µ–æ —Ñ–æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç!';
            status.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: #10b981;
                color: white;
                padding: 10px 20px;
                border-radius: 8px;
                font-weight: bold;
                z-index: 9999;
            `;
            document.body.appendChild(status);
            setTimeout(() => status.remove(), 3000);
        }

        function showError() {
            const error = document.createElement('div');
            error.innerHTML = '‚ùå –í–∏–¥–µ–æ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å';
            error.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: #ef4444;
                color: white;
                padding: 10px 20px;
                border-radius: 8px;
                font-weight: bold;
                z-index: 9999;
            `;
            document.body.appendChild(error);
            setTimeout(() => error.remove(), 5000);
        }

        container.appendChild(video);
        document.body.insertBefore(container, document.body.firstChild);

        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        window.debugVideoBackground = {
            play: () => video.play(),
            pause: () => video.pause(),
            setOpacity: (val) => video.style.opacity = val,
            restart: () => {
                currentIndex = 0;
                loadVideo();
            },
            info: () => ({
                src: video.src,
                paused: video.paused,
                currentTime: video.currentTime,
                duration: video.duration,
                readyState: video.readyState
            })
        };
    }

    // –ó–∞–ø—É—Å–∫
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', createVideoBackground);
    } else {
        createVideoBackground();
    }

    console.log('‚úÖ –†–ê–ë–û–¢–ê–Æ–©–ò–ô –≤–∏–¥–µ–æ —Ñ–æ–Ω –≥–æ—Ç–æ–≤!');
})();

// –ò–ù–°–¢–†–£–ö–¶–ò–Ø:
// 1. –°–∫–∞—á–∞–π—Ç–µ –õ–Æ–ë–û–ï –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –≤–∏–¥–µ–æ (—Å–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å, –±–æ–ª—å–Ω–∏—Ü–∞, –≤—Ä–∞—á–∏)
// 2. –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –≤ ambulance-bg.mp4  
// 3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤ –∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
// 4. –í–∏–¥–µ–æ –ó–ê–†–ê–ë–û–¢–ê–ï–¢!
