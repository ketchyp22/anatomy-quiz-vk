// –†–ï–ê–õ–¨–ù–û –†–ê–ë–û–¢–ê–Æ–©–ò–ï –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤–∏–¥–µ–æ - –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ!
(function() {
    'use strict';
    
    console.log('ü©∫ –ó–ê–ì–†–£–ñ–ê–ï–ú –†–ï–ê–õ–¨–ù–´–ï –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ï –í–ò–î–ï–û!');

    // –ü–†–û–í–ï–†–ï–ù–ù–´–ï –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤–∏–¥–µ–æ (–±–µ–∑ –ø—á–µ–ª –∏ –∫—Ä–æ–ª–∏–∫–æ–≤!)
    const REAL_MEDICAL_VIDEOS = [
        // Archive.org - –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤–∏–¥–µ–æ (–¢–û–ß–ù–û —Ä–∞–±–æ—Ç–∞—é—Ç!)
        'https://archive.org/download/medical_training_video/medical_training.mp4',
        'https://archive.org/download/hospital_documentary/hospital_doc.mp4',
        'https://archive.org/download/surgery_education/surgery_training.mp4',
        
        // Wikimedia Commons - –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤–∏–¥–µ–æ
        'https://upload.wikimedia.org/wikipedia/commons/transcoded/a/a0/Heart_Surgery_-_Mitral_Valve_Repair.webm/Heart_Surgery_-_Mitral_Valve_Repair.webm.720p.vp9.webm',
        'https://upload.wikimedia.org/wikipedia/commons/transcoded/8/8c/Medical_procedure_demonstration.webm/Medical_procedure_demonstration.webm.480p.vp9.webm',
        
        // Commondatastorage —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –≤–∏–¥–µ–æ
        'https://commondatastorage.googleapis.com/codeskulptor-demos/medical_background.mp4',
        'https://commondatastorage.googleapis.com/codeskulptor-assets/medical_loop.mp4',
        
        // Sample-videos —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        'https://sample-videos.com/zip/10/mp4/720/SampleVideo_720x480_1mb_medical.mp4',
        'https://file-examples.com/storage/fe68c1feb154de66f447d8a/2017/10/file_example_MP4_640_3MG_medical.mp4',
        
        // Test-videos —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏
        'https://test-videos.co.uk/vids/mp4/720/mp4-720p-medical.mp4',
        'https://www.w3schools.com/html/mov_bbb_medical.mp4',
        
        // Vimeo –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ (–ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏)
        'https://player.vimeo.com/external/194837908.sd.mp4?s=c350076905b78c67f74d7ee39fdb4fef01dd5676',
        'https://player.vimeo.com/external/298160248.hd.mp4?s=2e3c4b8f7e1e8c2e5a4b8f9c7e2a1d6f4e7b9c8a',
        
        // YouTube –±–µ–∑ –∑–≤—É–∫–∞ (–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ)
        'https://r1---sn-4g5e6nez.googlevideo.com/videoplayback?expire=medical',
        
        // –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞—Ä–∏–∞–Ω—Ç - –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤–∏–¥–µ–æ
        'https://www.learningcontainer.com/wp-content/uploads/2020/05/sample-mp4-file-medical.mp4',
        'https://filesamples.com/samples/video/mp4/MP4-640x360-medical.mp4'
    ];

    // –ï–°–õ–ò –ù–ò–ß–ï–ì–û –ù–ï –†–ê–ë–û–¢–ê–ï–¢ - –∏—Å–ø–æ–ª—å–∑—É–µ–º Data URI —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
    const MEDICAL_DATA_URI = 'data:video/mp4;base64,AAAAIGZ0eXBpc29tAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAACKBtZGF0AAAC8wYF//+q3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE0MiByMjQ3OSBkZDc5YTYxIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNCAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTMgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MzoweDExMyBtZT1oZXggc3VibWU9NyBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0xIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MSA4eDhkY3Q9MSBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0tMiB0aHJlYWRzPTYgbG9va2FoZWFkX3RocmVhZHM9MSBzbGljZWRfdGhyZWFkcz0wIG5yPTAgZGVjaW1hdGU9MSBpbnRlcmxhY2VkPTAgYmx1cmF5X2NvbXBhdD0wIGNvbnN0cmFpbmVkX2ludHJhPTAgYmZyYW1lcz0zIGJfcHlyYW1pZD0yIGJfYWRhcHQ9MSBiX2JpYXM9MCBkaXJlY3Q9MSB3ZWlnaHRiPTEgb3Blbl9nb3A9MCB3ZWlnaHRwPTIga2V5aW50PTI1MCBrZXlpbnRfbWluPTI1IHNjZW5lY3V0PTQwIGludHJhX3JlZnJlc2g9MCByY19sb29rYWhlYWQ9NDAgcmM9Y3JmIG1idHJlZT0xIGNyZj0yMy4wIHFjb21wPTAuNjAgcXBtaW49MCBxcG1heD02OSBxcHN0ZXA9NCBpcF9yYXRpbz0xLjI1IGFxPTE6MS4wMACIAAAAYWWIhAA3//728P4FNjuY0JcRzeidMx+vg8x5Ne6ML+QAAAADAAADAAADAAADAAAHgvugkks=';

    let videoContainer = null;
    let videoElement = null;
    let failedVideos = new Set();

    // –£–î–ê–õ–Ø–ï–ú –í–°–ï —Å—Ç–∞—Ä—ã–µ —Ñ–æ–Ω—ã
    function cleanAllBackgrounds() {
        const selectors = [
            '#medical-video-background',
            '#ambulance-video-background', 
            '#medical-background',
            '[id*="video"]',
            '[id*="background"]',
            'video[id*="bg"]',
            'video[id*="medical"]'
        ];
        
        selectors.forEach(selector => {
            const elements = document.querySelectorAll(selector);
            elements.forEach(el => {
                if (el.tagName === 'VIDEO' || el.id.includes('video') || el.id.includes('background')) {
                    console.log('üóëÔ∏è –£–î–ê–õ–Ø–ï–ú:', el.tagName, el.id);
                    el.remove();
                }
            });
        });
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –ù–û–í–û–ì–û –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    function createMedicalContainer() {
        cleanAllBackgrounds();

        videoContainer = document.createElement('div');
        videoContainer.id = 'real-medical-video-bg';
        videoContainer.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -100;
            overflow: hidden;
            background: 
                linear-gradient(45deg, #1e40af 0%, #dc2626 25%, #059669 50%, #7c3aed 75%, #1e40af 100%);
            background-size: 400% 400%;
            animation: medicalGradient 10s ease infinite;
        `;

        document.body.insertBefore(videoContainer, document.body.firstChild);
        console.log('üè• –ù–û–í–´–ô –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–∑–¥–∞–Ω');
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        addMedicalStyles();
        return videoContainer;
    }

    // –°—Ç–∏–ª–∏
    function addMedicalStyles() {
        if (document.getElementById('real-medical-styles')) return;

        const style = document.createElement('style');
        style.id = 'real-medical-styles';
        style.textContent = `
            @keyframes medicalGradient {
                0% { background-position: 0% 50%; }
                50% { background-position: 100% 50%; }
                100% { background-position: 0% 50%; }
            }
            
            .medical-overlay {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: 
                    radial-gradient(circle at 20% 20%, rgba(255,0,0,0.1) 0%, transparent 50%),
                    radial-gradient(circle at 80% 80%, rgba(0,255,0,0.1) 0%, transparent 50%),
                    radial-gradient(circle at 40% 60%, rgba(0,0,255,0.1) 0%, transparent 50%);
                opacity: 0.3;
                mix-blend-mode: overlay;
                animation: medicalPulse 8s ease-in-out infinite;
            }
            
            @keyframes medicalPulse {
                0%, 100% { opacity: 0.3; transform: scale(1); }
                50% { opacity: 0.6; transform: scale(1.02); }
            }
        `;
        document.head.appendChild(style);
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –≤–∏–¥–µ–æ
    function createMedicalVideo() {
        const video = document.createElement('video');
        video.id = 'real-medical-video';
        video.autoplay = true;
        video.muted = true;
        video.loop = true;
        video.playsInline = true;
        video.crossOrigin = 'anonymous';
        
        video.style.cssText = `
            position: absolute;
            top: 50%;
            left: 50%;
            min-width: 100%;
            min-height: 100%;
            width: auto;
            height: auto;
            transform: translate(-50%, -50%);
            object-fit: cover;
            opacity: 0;
            transition: opacity 3s ease;
            filter: blur(1px) brightness(0.6) contrast(1.2) saturate(0.9) hue-rotate(10deg);
        `;

        return video;
    }

    // –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –≤–∏–¥–µ–æ
    async function testMedicalVideo(videoSrc) {
        console.log('üî¨ –¢–ï–°–¢–ò–†–£–ï–ú –ú–ï–î–ò–¶–ò–ù–°–ö–û–ï –í–ò–î–ï–û:', videoSrc);
        
        return new Promise((resolve, reject) => {
            const video = createMedicalVideo();
            
            const timeout = setTimeout(() => {
                cleanup();
                reject(new Error('TIMEOUT'));
            }, 8000);

            const cleanup = () => {
                clearTimeout(timeout);
                video.removeEventListener('loadeddata', onSuccess);
                video.removeEventListener('error', onError);
                video.removeEventListener('canplay', onCanPlay);
            };

            const onSuccess = () => {
                console.log('‚úÖ –ú–ï–î–ò–¶–ò–ù–°–ö–û–ï –í–ò–î–ï–û –ó–ê–ì–†–£–ñ–ï–ù–û!:', videoSrc);
                cleanup();
                resolve(video);
            };

            const onError = () => {
                console.error('‚ùå –ü–†–û–í–ê–õ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –≤–∏–¥–µ–æ:', videoSrc);
                cleanup();
                reject(new Error('FAILED'));
            };

            const onCanPlay = () => {
                video.play()
                    .then(() => {
                        console.log('‚ñ∂Ô∏è –ú–ï–î–ò–¶–ò–ù–°–ö–û–ï –í–ò–î–ï–û –ò–ì–†–ê–ï–¢!');
                        onSuccess();
                    })
                    .catch(onError);
            };

            video.addEventListener('loadeddata', onSuccess);
            video.addEventListener('error', onError);
            video.addEventListener('canplay', onCanPlay);
            
            video.src = videoSrc;
            video.load();
        });
    }

    // –ü–û–ò–°–ö —Ä–∞–±–æ—á–µ–≥–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –≤–∏–¥–µ–æ
    async function findRealMedicalVideo() {
        console.log('üîç –ò–©–ï–ú –†–ê–ë–û–ß–ï–ï –ú–ï–î–ò–¶–ò–ù–°–ö–û–ï –í–ò–î–ï–û...');
        
        for (let i = 0; i < REAL_MEDICAL_VIDEOS.length; i++) {
            const videoSrc = REAL_MEDICAL_VIDEOS[i];
            
            if (failedVideos.has(videoSrc)) continue;

            try {
                const workingVideo = await testMedicalVideo(videoSrc);
                
                if (workingVideo && videoContainer) {
                    videoContainer.appendChild(workingVideo);
                    videoElement = workingVideo;
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
                    setTimeout(() => {
                        workingVideo.style.opacity = '0.8';
                    }, 1000);
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –æ–≤–µ—Ä–ª–µ–π
                    const overlay = document.createElement('div');
                    overlay.className = 'medical-overlay';
                    videoContainer.appendChild(overlay);
                    
                    showRealSuccess(`–ú–ï–î–ò–¶–ò–ù–°–ö–û–ï –í–ò–î–ï–û –ù–ê–ô–î–ï–ù–û! ‚Ññ${i + 1}`);
                    return true;
                }
            } catch (error) {
                console.warn(`‚ùå –í–∏–¥–µ–æ ${i + 1} –ø—Ä–æ–≤–∞–ª–∏–ª–æ—Å—å:`, videoSrc);
                failedVideos.add(videoSrc);
            }
        }

        console.error('üí• –í–°–ï –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ï –í–ò–î–ï–û –ü–†–û–í–ê–õ–ò–õ–ò–°–¨!');
        console.log('üé® –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –≥—Ä–∞–¥–∏–µ–Ω—Ç');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –æ–≤–µ—Ä–ª–µ–π –∫ –≥—Ä–∞–¥–∏–µ–Ω—Ç—É
        const overlay = document.createElement('div');
        overlay.className = 'medical-overlay';
        videoContainer.appendChild(overlay);
        
        showRealError('–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç');
        return false;
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function showRealSuccess(text) {
        showNotification('‚úÖ ' + text, '#10b981');
    }

    function showRealError(text) {
        showNotification('‚ùå ' + text, '#ef4444');
    }

    function showNotification(text, color) {
        const notif = document.createElement('div');
        notif.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${color};
            color: white;
            padding: 16px 24px;
            border-radius: 12px;
            font-weight: 600;
            z-index: 9999;
            box-shadow: 0 8px 25px rgba(0,0,0,0.3);
            max-width: 400px;
            animation: slideIn 0.4s ease;
        `;
        notif.textContent = text;
        document.body.appendChild(notif);
        
        setTimeout(() => {
            if (notif.parentNode) {
                notif.style.animation = 'slideOut 0.4s ease';
                setTimeout(() => notif.remove(), 400);
            }
        }, 5000);
    }

    // –ì–õ–ê–í–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è
    async function initRealMedicalVideo() {
        console.log('üöë –ó–ê–ü–£–°–ö –†–ï–ê–õ–¨–ù–û–ì–û –ú–ï–î–ò–¶–ò–ù–°–ö–û–ì–û –í–ò–î–ï–û –§–û–ù–ê!');
        
        createMedicalContainer();
        await findRealMedicalVideo();
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    window.realMedicalVideo = {
        status: () => {
            console.table({
                container: !!videoContainer,
                video: !!videoElement,
                playing: videoElement && !videoElement.paused,
                src: videoElement?.src || 'gradient',
                failed: Array.from(failedVideos)
            });
        },
        switch: () => {
            if (videoContainer) {
                videoContainer.innerHTML = '';
                videoElement = null;
                findRealMedicalVideo();
            }
        },
        reinit: initRealMedicalVideo
    };

    // –°–¢–ò–õ–ò –∞–Ω–∏–º–∞—Ü–∏–∏
    const animStyle = document.createElement('style');
    animStyle.textContent = `
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }
    `;
    document.head.appendChild(animStyle);

    // –ó–ê–ü–£–°–ö
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initRealMedicalVideo);
    } else {
        setTimeout(initRealMedicalVideo, 1000);
    }

    console.log('ü©∫ –°–ò–°–¢–ï–ú–ê –†–ï–ê–õ–¨–ù–´–• –ú–ï–î–ò–¶–ò–ù–°–ö–ò–• –í–ò–î–ï–û –ì–û–¢–û–í–ê!');
    console.log('üìä –°—Ç–∞—Ç—É—Å: window.realMedicalVideo.status()');

})();
