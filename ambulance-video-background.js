// ambulance-video-background.js - –õ–æ–∫–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã
(function() {
    'use strict';
    
    console.log('üé¨ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –≤–∏–¥–µ–æ...');

    // –õ–û–ö–ê–õ–¨–ù–´–ï –í–ò–î–ï–û –§–ê–ô–õ–´
    const LOCAL_VIDEOS = [
        {
            id: 'local_video_1',
            name: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –≤–∏–¥–µ–æ 1',
            path: './video1.mp4'
        },
        {
            id: 'local_video_2',
            name: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –≤–∏–¥–µ–æ 2',
            path: './video2.mp4'
        },
        {
            id: 'local_video_3',
            name: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –≤–∏–¥–µ–æ 3',
            path: './video3.mp4'
        }
    ];

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
    const CONFIG = {
        randomSelection: true,      // –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –≤–∏–¥–µ–æ
        fallbackChain: true,       // –¶–µ–ø–æ—á–∫–∞ fallback –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
        vkCompatibility: true,     // –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å VK
        maxRetries: 2,             // –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ –≤–∏–¥–µ–æ
        retryDelay: 2000,          // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
        showNotifications: false,   // –ë–ï–ó —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        timeoutMs: 8000            // –¢–∞–π–º-–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏
    };

    let videoContainer = null;
    let currentVideo = null;
    let currentVideoIndex = 0;
    let retryCount = 0;
    let isInitialized = false;
    let isVKEnvironment = false;

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ VK –æ–∫—Ä—É–∂–µ–Ω–∏—è
    function detectVKEnvironment() {
        const vkIndicators = [
            window.location.hostname.includes('vk.com'),
            window.location.hostname.includes('vk.me'),
            typeof window.vkBridge !== 'undefined',
            document.referrer.includes('vk.com'),
            navigator.userAgent.includes('VKApp'),
            window.parent !== window
        ];
        
        isVKEnvironment = vkIndicators.some(Boolean);
        console.log('üîç VK –æ–∫—Ä—É–∂–µ–Ω–∏–µ:', isVKEnvironment ? '–û–ë–ù–ê–†–£–ñ–ï–ù–û' : '–ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù–û');
        
        return isVKEnvironment;
    }

    // –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –≤–∏–¥–µ–æ
    function clearExistingElements() {
        const selectors = [
            'video', 
            '[id*="video"]', 
            '[id*="background"]', 
            '[id*="medical"]',
            '[id*="ambulance"]',
            '[id*="local"]'
        ];
        
        selectors.forEach(selector => {
            document.querySelectorAll(selector).forEach(el => {
                if (el.tagName === 'VIDEO' || 
                    el.id.match(/(video|background|medical|ambulance|local)/i)) {
                    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º:', el.tagName, el.id || '–±–µ–∑ ID');
                    el.remove();
                }
            });
        });
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    function createVideoContainer() {
        clearExistingElements();

        videoContainer = document.createElement('div');
        videoContainer.id = 'local-medical-container';
        videoContainer.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -100;
            overflow: hidden;
            background: linear-gradient(135deg, #1a202c 0%, #2d3748 100%);
        `;

        document.body.insertBefore(videoContainer, document.body.firstChild);
        console.log('üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω');
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    function createVideoElement(videoPath, videoInfo) {
        console.log(`üé¨ –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ: ${videoInfo.name}`);
        console.log(`üìç –ü—É—Ç—å: ${videoPath}`);

        const video = document.createElement('video');
        video.id = 'local-medical-video';
        video.src = videoPath;
        video.autoplay = true;
        video.muted = true;
        video.loop = true;
        video.playsInline = true;
        video.preload = 'auto';
        
        // –£–±–∏—Ä–∞–µ–º crossOrigin –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        // video.crossOrigin = 'anonymous';
        
        video.style.cssText = `
            position: absolute;
            top: 50%;
            left: 50%;
            min-width: 100%;
            min-height: 100%;
            width: auto;
            height: auto;
            transform: translate(-50%, -50%);
            object-fit: cover;
            opacity: 0;
            transition: opacity 2s ease-in-out;
            filter: blur(0.5px) brightness(0.6) contrast(1.1) saturate(0.9);
        `;

        return video;
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    function setupVideoHandlers(video, videoInfo, videoPath) {
        const timeoutId = setTimeout(() => {
            console.warn(`‚è∞ –¢–∞–π–º-–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏: ${videoInfo.name}`);
            handleVideoError(videoInfo, 'timeout');
        }, CONFIG.timeoutMs);

        video.addEventListener('loadeddata', function() {
            clearTimeout(timeoutId);
            console.log(`‚úÖ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${videoInfo.name}`);
            this.style.opacity = '0.8';
            retryCount = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
        });

        video.addEventListener('error', function(e) {
            clearTimeout(timeoutId);
            console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${videoInfo.name}:`, e);
            console.error(`‚ùå –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø—É—Ç—å: ${videoPath}`);
            console.error(`‚ùå –ö–æ–¥ –æ—à–∏–±–∫–∏:`, this.error ? this.error.code : '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω');
            handleVideoError(videoInfo, 'load_error');
        });

        video.addEventListener('canplaythrough', function() {
            console.log(`üì∫ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ: ${videoInfo.name}`);
            this.play().then(() => {
                console.log(`‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: ${videoInfo.name}`);
            }).catch(err => {
                console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', err);
                handleVideoError(videoInfo, 'play_error');
            });
        });

        video.addEventListener('loadstart', function() {
            console.log(`üîÑ –ù–∞—á–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∞: ${videoInfo.name}`);
        });

        video.addEventListener('stalled', function() {
            console.warn(`‚è∏Ô∏è –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—Å—Ç–æ–ø–æ—Ä–∏–ª–∞—Å—å: ${videoInfo.name}`);
        });

        video.addEventListener('waiting', function() {
            console.warn(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: ${videoInfo.name}`);
        });

        // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        video.addEventListener('progress', function() {
            if (this.buffered.length > 0) {
                const bufferedEnd = this.buffered.end(this.buffered.length - 1);
                const duration = this.duration;
                if (duration > 0) {
                    const percent = Math.round((bufferedEnd / duration) * 100);
                    console.log(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${videoInfo.name}: ${percent}%`);
                }
            }
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
    function handleVideoError(videoInfo, errorType) {
        console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å –≤–∏–¥–µ–æ: ${videoInfo.name} (${errorType})`);
        
        retryCount++;
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–∏–¥–µ–æ
        if (currentVideoIndex < LOCAL_VIDEOS.length - 1) {
            currentVideoIndex++;
            retryCount = 0;
            
            console.log(`‚û°Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ...`);
            setTimeout(() => {
                loadCurrentVideo();
            }, CONFIG.retryDelay);
            return;
        }
        
        // –í—Å–µ –≤–∏–¥–µ–æ –∏—Å—á–µ—Ä–ø–∞–Ω—ã - –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∏–¥–µ–æ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ø—ã—Ç–∫–∏)
        if (retryCount < CONFIG.maxRetries) {
            console.log(`üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∏–¥–µ–æ (–ø–æ–ø—ã—Ç–∫–∞ ${retryCount + 1})`);
            currentVideoIndex = 0;
            setTimeout(() => {
                loadCurrentVideo();
            }, CONFIG.retryDelay);
            return;
        }
        
        // –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã
        console.error('‚ùå –í—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        showFallbackBackground();
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –≤–∏–¥–µ–æ
    function loadCurrentVideo() {
        if (currentVideoIndex >= LOCAL_VIDEOS.length) {
            console.error('‚ùå –ò–Ω–¥–µ–∫—Å –≤–∏–¥–µ–æ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã');
            showFallbackBackground();
            return;
        }

        const videoInfo = LOCAL_VIDEOS[currentVideoIndex];
        const videoPath = videoInfo.path;
        
        console.log(`üé¨ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ ${currentVideoIndex + 1}/${LOCAL_VIDEOS.length}: ${videoInfo.name}`);
        console.log(`üìç –ü—É—Ç—å: ${videoPath}`);

        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ
        if (currentVideo) {
            currentVideo.style.opacity = '0';
            setTimeout(() => {
                if (currentVideo && currentVideo.parentNode) {
                    currentVideo.remove();
                }
            }, 1000);
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ
        currentVideo = createVideoElement(videoPath, videoInfo);
        setupVideoHandlers(currentVideo, videoInfo, videoPath);
        
        if (videoContainer) {
            videoContainer.appendChild(currentVideo);
        }
    }

    // Fallback —Ñ–æ–Ω –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –≤–∏–¥–µ–æ
    function showFallbackBackground() {
        console.log('üé® –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω');
        
        if (videoContainer) {
            videoContainer.style.background = `
                radial-gradient(circle at 25% 25%, rgba(79, 209, 197, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 75% 75%, rgba(102, 126, 234, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 50% 50%, rgba(118, 75, 162, 0.2) 0%, transparent 50%),
                linear-gradient(135deg, #1a202c 0%, #2d3748 100%)
            `;
            videoContainer.style.animation = 'backgroundPulse 8s ease-in-out infinite';
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—É–ª—å—Å–∞
        if (!document.getElementById('fallback-pulse-styles')) {
            const style = document.createElement('style');
            style.id = 'fallback-pulse-styles';
            style.textContent = `
                @keyframes backgroundPulse {
                    0%, 100% { filter: brightness(0.8); }
                    50% { filter: brightness(1.1); }
                }
            `;
            document.head.appendChild(style);
        }
    }

    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤–∏–¥–µ–æ –º–∞—Å—Å–∏–≤–∞
    function prepareVideoList() {
        if (CONFIG.randomSelection) {
            // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –≤–∏–¥–µ–æ
            for (let i = LOCAL_VIDEOS.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [LOCAL_VIDEOS[i], LOCAL_VIDEOS[j]] = [LOCAL_VIDEOS[j], LOCAL_VIDEOS[i]];
            }
            console.log('üé≤ –í–∏–¥–µ–æ –ø–µ—Ä–µ–º–µ—à–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º');
        }
        
        currentVideoIndex = 0;
    }

    // –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    function initLocalVideoBackground() {
        if (isInitialized) {
            console.log('‚ö†Ô∏è –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–∏–¥–µ–æ —Å–∏—Å—Ç–µ–º–∞ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            return;
        }

        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –≤–∏–¥–µ–æ —Å–∏—Å—Ç–µ–º—ã...');
        console.log(`üìä –î–æ—Å—Ç—É–ø–Ω–æ ${LOCAL_VIDEOS.length} –ª–æ–∫–∞–ª—å–Ω—ã—Ö –≤–∏–¥–µ–æ`);
        
        detectVKEnvironment();
        createVideoContainer();
        prepareVideoList();
        loadCurrentVideo();
        
        isInitialized = true;
        console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–∏–¥–µ–æ —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞');
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    window.localMedicalVideo = {
        status: function() {
            const video = document.getElementById('local-medical-video');
            const container = document.getElementById('local-medical-container');
            
            const status = {
                initialized: isInitialized,
                isVKEnvironment: isVKEnvironment,
                container: !!container,
                video: !!video,
                playing: video && !video.paused,
                currentVideo: LOCAL_VIDEOS[currentVideoIndex]?.name || 'None',
                currentPath: LOCAL_VIDEOS[currentVideoIndex]?.path || 'None',
                retryCount: retryCount,
                readyState: video ? video.readyState : 0,
                totalVideos: LOCAL_VIDEOS.length,
                videoError: video && video.error ? video.error.code : null
            };
            
            console.table(status);
            return status;
        },
        
        nextVideo: function() {
            if (currentVideoIndex < LOCAL_VIDEOS.length - 1) {
                currentVideoIndex++;
                retryCount = 0;
                loadCurrentVideo();
                console.log(`‚û°Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ: ${LOCAL_VIDEOS[currentVideoIndex].name}`);
            } else {
                console.warn('‚ö†Ô∏è –≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∏–¥–µ–æ –≤ —Å–ø–∏—Å–∫–µ');
            }
        },
        
        previousVideo: function() {
            if (currentVideoIndex > 0) {
                currentVideoIndex--;
                retryCount = 0;
                loadCurrentVideo();
                console.log(`‚¨ÖÔ∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ: ${LOCAL_VIDEOS[currentVideoIndex].name}`);
            } else {
                console.warn('‚ö†Ô∏è –≠—Ç–æ –ø–µ—Ä–≤–æ–µ –≤–∏–¥–µ–æ –≤ —Å–ø–∏—Å–∫–µ');
            }
        },
        
        randomVideo: function() {
            const randomIndex = Math.floor(Math.random() * LOCAL_VIDEOS.length);
            currentVideoIndex = randomIndex;
            retryCount = 0;
            loadCurrentVideo();
            console.log(`üé≤ –°–ª—É—á–∞–π–Ω–æ–µ –≤–∏–¥–µ–æ: ${LOCAL_VIDEOS[currentVideoIndex].name}`);
        },
        
        restart: function() {
            console.log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –≤–∏–¥–µ–æ —Å–∏—Å—Ç–µ–º—ã...');
            isInitialized = false;
            currentVideoIndex = 0;
            retryCount = 0;
            initLocalVideoBackground();
        },
        
        toggle: function() {
            const video = document.getElementById('local-medical-video');
            if (video) {
                if (video.paused) {
                    video.play().then(() => {
                        console.log('‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ');
                    });
                } else {
                    video.pause();
                    console.log('‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
                }
            }
        },
        
        getVideoList: function() {
            return LOCAL_VIDEOS.map((video, index) => ({
                index: index,
                name: video.name,
                id: video.id,
                path: video.path
            }));
        },
        
        testVideo: function(index) {
            if (index >= 0 && index < LOCAL_VIDEOS.length) {
                currentVideoIndex = index;
                retryCount = 0;
                loadCurrentVideo();
                console.log(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∏–¥–µ–æ: ${LOCAL_VIDEOS[index].name}`);
            } else {
                console.error(`‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å: ${index}. –î–æ—Å—Ç—É–ø–Ω–æ: 0-${LOCAL_VIDEOS.length - 1}`);
            }
        },
        
        checkVideoFiles: function() {
            console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤...');
            
            LOCAL_VIDEOS.forEach((video, index) => {
                const testVideo = document.createElement('video');
                testVideo.preload = 'metadata';
                
                testVideo.addEventListener('loadedmetadata', () => {
                    console.log(`‚úÖ ${video.name} (${video.path}) - OK`);
                    testVideo.remove();
                });
                
                testVideo.addEventListener('error', (e) => {
                    console.error(`‚ùå ${video.name} (${video.path}) - –û–®–ò–ë–ö–ê:`, e);
                    testVideo.remove();
                });
                
                testVideo.src = video.path;
            });
        }
    };

    // –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    window.medicalVideoBackground = window.localMedicalVideo;
    window.pexelsMedicalVideo = window.localMedicalVideo;

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initLocalVideoBackground);
    } else {
        setTimeout(initLocalVideoBackground, 100);
    }

    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    console.log('üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: window.localMedicalVideo');
    console.log('üìã –°–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ: window.localMedicalVideo.getVideoList()');
    console.log('üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤: window.localMedicalVideo.checkVideoFiles()');

})();
