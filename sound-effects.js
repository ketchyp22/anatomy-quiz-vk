// sound-effects.js - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
(function() {
    // –°–æ–∑–¥–∞–µ–º –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Web Audio API
    class SoundEffects {
        constructor() {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—É–¥–∏–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç
            this.initAudio();
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞
            this.createMuteButton();
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            this.setupEventListeners();
        }
        
        initAudio() {
            try {
                // –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                window.AudioContext = window.AudioContext || window.webkitAudioContext;
                this.audioContext = null;
                this.isMuted = false;
                this.sounds = {};
                
                // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–≤—É–∫–∏ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
                this.createSoundDefinitions();
                
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—É–¥–∏–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∫–ª–∏–∫–µ
                const initOnInteraction = () => {
                    if (!this.audioContext) {
                        this.audioContext = new AudioContext();
                        this.playStartupSound(); // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º, —á—Ç–æ –∑–≤—É–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç
                    }
                    
                    // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                    document.removeEventListener('click', initOnInteraction);
                    document.removeEventListener('touchstart', initOnInteraction);
                };
                
                document.addEventListener('click', initOnInteraction);
                document.addEventListener('touchstart', initOnInteraction);
                
                console.log("üîä –ó–≤—É–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞");
            } catch (e) {
                console.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–≤—É–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:", e);
            }
        }
        
        createSoundDefinitions() {
            // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–≤ (–¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è)
            this.sounds = {
                select: {
                    play: () => this.playTone(600, 0.1, 'sine')
                },
                correct: {
                    play: () => {
                        this.playTone(800, 0.1, 'sine');
                        setTimeout(() => this.playTone(1000, 0.15, 'sine'), 100);
                    }
                },
                wrong: {
                    play: () => {
                        this.playTone(300, 0.1, 'sine');
                        setTimeout(() => this.playTone(200, 0.15, 'sine'), 100);
                    }
                },
                start: {
                    play: () => {
                        this.playTone(500, 0.1, 'sine');
                        setTimeout(() => this.playTone(700, 0.1, 'sine'), 150);
                        setTimeout(() => this.playTone(900, 0.15, 'sine'), 300);
                    }
                },
                complete: {
                    play: () => {
                        this.playTone(700, 0.1, 'sine');
                        setTimeout(() => this.playTone(900, 0.1, 'sine'), 150);
                        setTimeout(() => this.playTone(1100, 0.1, 'sine'), 300);
                        setTimeout(() => this.playTone(1300, 0.2, 'sine'), 450);
                    }
                }
            };
        }
        
        playStartupSound() {
            // –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∑–≤—É–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            this.playTone(440, 0.1, 'sine'); // –Ω–æ—Ç–∞ "–ª—è" 440 –ì—Ü
            console.log("üéµ –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∑–≤—É–∫");
        }
        
        playTone(frequency, duration, type = 'sine') {
            if (!this.audioContext || this.isMuted) {
                console.log("üîá –ó–≤—É–∫ –æ—Ç–∫–ª—é—á–µ–Ω –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
                return;
            }
            
            try {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
                if (this.audioContext.state === 'suspended') {
                    this.audioContext.resume();
                }
                
                const oscillator = this.audioContext.createOscillator();
                const gainNode = this.audioContext.createGain();
                
                oscillator.type = type;
                oscillator.frequency.value = frequency;
                oscillator.connect(gainNode);
                gainNode.connect(this.audioContext.destination);
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å
                gainNode.gain.value = 0.2; // –ü–æ–≤—ã—à–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –¥–ª—è –ª—É—á—à–µ–π —Å–ª—ã—à–∏–º–æ—Å—Ç–∏
                
                // –ü–ª–∞–≤–Ω—ã–π –∑–≤—É–∫
                const now = this.audioContext.currentTime;
                gainNode.gain.setValueAtTime(0, now);
                gainNode.gain.linearRampToValueAtTime(0.2, now + 0.01);
                gainNode.gain.linearRampToValueAtTime(0, now + duration);
                
                oscillator.start();
                oscillator.stop(now + duration);
                
                console.log(`üîä –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è —Ç–æ–Ω ${frequency}Hz`);
            } catch (e) {
                console.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:", e);
            }
        }
        
        toggleMute() {
            this.isMuted = !this.isMuted;
            
            const button = document.getElementById('mute-button');
            if (button) {
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
                if (this.isMuted) {
                    button.innerHTML = '<svg viewBox="0 0 24 24" width="20" height="20"><path d="M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z" fill="currentColor"/></svg>';
                    button.classList.add('muted');
                } else {
                    button.innerHTML = '<svg viewBox="0 0 24 24" width="20" height="20"><path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z" fill="currentColor"/></svg>';
                    button.classList.remove('muted');
                }
                
                console.log(`üîä –ó–≤—É–∫ ${this.isMuted ? '–≤—ã–∫–ª—é—á–µ–Ω' : '–≤–∫–ª—é—á–µ–Ω'}`);
                
                // –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∑–≤—É–∫ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏, –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
                if (!this.isMuted && this.audioContext) {
                    this.playTone(700, 0.1, 'sine');
                }
            }
        }
        
        createMuteButton() {
            // –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏
            const style = document.createElement('style');
            style.textContent = `
                #mute-button {
                    position: fixed;
                    bottom: 20px;
                    right: 20px;
                    width: 40px;
                    height: 40px;
                    border-radius: 50%;
                    background-color: var(--btn-primary-bg);
                    color: white;
                    border: none;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    cursor: pointer;
                    z-index: 1000;
                    opacity: 0.8;
                    transition: all 0.3s ease;
                    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
                }
                
                #mute-button:hover {
                    opacity: 1;
                    transform: scale(1.05);
                }
                
                #mute-button.muted {
                    background-color: #999;
                }
            `;
            document.head.appendChild(style);
            
            // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
            const button = document.createElement('button');
            button.id = 'mute-button';
            button.title = '–í—ã–∫–ª—é—á–∏—Ç—å/–≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫';
            button.innerHTML = '<svg viewBox="0 0 24 24" width="20" height="20"><path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z" fill="currentColor"/></svg>';
            button.addEventListener('click', () => this.toggleMute());
            
            document.body.appendChild(button);
        }
        
        setupEventListeners() {
            document.addEventListener('DOMContentLoaded', () => {
                // –ó–≤—É–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∫–≤–∏–∑–∞
                const startButton = document.getElementById('start-quiz');
                if (startButton) {
                    startButton.addEventListener('click', () => {
                        if (!this.isMuted) {
                            this.sounds.start.play();
                            console.log("üéÆ –°—Ç–∞—Ä—Ç –∫–≤–∏–∑–∞ - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è –∑–≤—É–∫");
                        }
                    });
                }
                
                // –ó–≤—É–∫ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –æ—Ç–≤–µ—Ç–∞
                const optionsContainer = document.getElementById('options');
                if (optionsContainer) {
                    optionsContainer.addEventListener('click', (e) => {
                        if (e.target.classList.contains('option') && !e.target.classList.contains('selected')) {
                            if (!this.isMuted) {
                                this.sounds.select.play();
                                console.log("üéÆ –í—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞ - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è –∑–≤—É–∫");
                            }
                        }
                    });
                }
                
                // –ó–≤—É–∫ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ—Ç–≤–µ—Ç–∞ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
                const nextButton = document.getElementById('next-question');
                if (nextButton) {
                    nextButton.addEventListener('click', () => {
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                        if (typeof window.selectedOption !== 'undefined' && 
                            typeof window.currentQuestion !== 'undefined' && 
                            typeof window.questionsForQuiz !== 'undefined' && 
                            window.questionsForQuiz && 
                            window.currentQuestion < window.questionsForQuiz.length && 
                            window.selectedOption !== null) {
                            
                            const correctAnswer = window.questionsForQuiz[window.currentQuestion].correct;
                            
                            if (!this.isMuted) {
                                if (window.selectedOption === correctAnswer) {
                                    setTimeout(() => {
                                        this.sounds.correct.play();
                                        console.log("üéÆ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è –∑–≤—É–∫");
                                    }, 300);
                                } else {
                                    setTimeout(() => {
                                        this.sounds.wrong.play();
                                        console.log("üéÆ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è –∑–≤—É–∫");
                                    }, 300);
                                }
                            }
                        } else {
                            console.log("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ –æ—Ç–≤–µ—Ç–∞");
                        }
                    });
                }
                
                // –ó–≤—É–∫ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∫–≤–∏–∑–∞
                const resultsContainer = document.getElementById('results-container');
                if (resultsContainer) {
                    const observer = new MutationObserver((mutations) => {
                        mutations.forEach((mutation) => {
                            if (mutation.type === 'attributes' && 
                                mutation.attributeName === 'style' && 
                                resultsContainer.style.display === 'block') {
                                if (!this.isMuted) {
                                    this.sounds.complete.play();
                                    console.log("üéÆ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–∏–∑–∞ - –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è –∑–≤—É–∫");
                                }
                            }
                        });
                    });
                    
                    observer.observe(resultsContainer, { attributes: true });
                }
            });
        }
    }
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏ –¥–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ
    window.quizSoundEffects = new SoundEffects();
    console.log("üéµ –ú–æ–¥—É–ª—å –∑–≤—É–∫–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω");
})();
