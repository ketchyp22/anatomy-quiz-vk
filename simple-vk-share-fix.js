// simple-vk-share-fix.js - –ü—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ —à–µ—Ä–∏–Ω–≥–∞ –¥–ª—è VK
(function() {
    'use strict';
    
    console.log('üì§ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ —à–µ—Ä–∏–Ω–≥–∞ –¥–ª—è VK...');
    
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(initSimpleShare, 2000);
    });
    
    function initSimpleShare() {
        console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —à–µ—Ä–∏–Ω–≥');
        
        const shareButton = document.getElementById('share-results');
        if (!shareButton) {
            console.warn('‚ùå –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }
        
        // –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        shareButton.innerHTML = 'üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç';
        
        // –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–∫–∏
        shareButton.onclick = function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            console.log('üìã –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ - –∫–æ–ø–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç');
            shareResultsSimple();
        };
        
        console.log('‚úÖ –ü—Ä–æ—Å—Ç–æ–π —à–µ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }
    
    function shareResultsSimple() {
        console.log('üéØ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ—Ü–µ—Å—Å —à–µ—Ä–∏–Ω–≥–∞...');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const results = getResults();
        if (!results) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã');
            showSimpleAlert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞');
            return;
        }
        
        console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —à–µ—Ä–∏–Ω–≥–∞:', results);
        
        // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        const message = createShareMessage(results);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –æ–∫–Ω–æ —Å —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        showShareModal(message, results);
    }
    
    function showShareModal(message, results) {
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
            backdrop-filter: blur(5px);
            animation: fadeIn 0.3s ease;
        `;
        
        const dialog = document.createElement('div');
        dialog.style.cssText = `
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
            animation: slideIn 0.3s ease;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            position: relative;
        `;
        
        dialog.innerHTML = `
            <div style="text-align: center; margin-bottom: 25px;">
                <h3 style="margin: 0 0 10px 0; color: #333; font-size: 24px;">
                    üéâ –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ—Ç–æ–≤!
                </h3>
                <div style="font-size: 48px; margin: 10px 0; color: #10B981;">
                    ${getEmoji(results.percentage)} ${results.percentage}%
                </div>
                <p style="color: #666; margin: 0;">
                    ${results.correct} –∏–∑ ${results.total} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
                </p>
            </div>
            
            <div style="margin-bottom: 20px;">
                <p style="margin-bottom: 15px; color: #333; font-weight: 600;">
                    üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤ –í–ö:
                </p>
                <textarea id="share-text" readonly style="
                    width: 100%;
                    height: 200px;
                    padding: 15px;
                    border: 2px solid #e2e8f0;
                    border-radius: 12px;
                    font-family: inherit;
                    font-size: 14px;
                    line-height: 1.5;
                    resize: vertical;
                    background: #f8fafc;
                    color: #334155;
                    box-sizing: border-box;
                ">${message}</textarea>
            </div>
            
            <div style="display: flex; gap: 10px; margin-bottom: 15px;">
                <button id="select-all-text" style="
                    flex: 1;
                    padding: 15px;
                    background: #3B82F6;
                    color: white;
                    border: none;
                    border-radius: 12px;
                    font-size: 16px;
                    cursor: pointer;
                    font-weight: 500;
                ">
                    üìù –í—ã–¥–µ–ª–∏—Ç—å –≤–µ—Å—å —Ç–µ–∫—Å—Ç
                </button>
                
                <button id="download-image" style="
                    flex: 1;
                    padding: 15px;
                    background: #8B5CF6;
                    color: white;
                    border: none;
                    border-radius: 12px;
                    font-size: 16px;
                    cursor: pointer;
                    font-weight: 500;
                ">
                    üñºÔ∏è –°–∫–∞—á–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É
                </button>
            </div>
            
            <div style="background: #f0f9ff; padding: 15px; border-radius: 12px; margin-bottom: 20px;">
                <p style="margin: 0; font-size: 14px; color: #0369a1; line-height: 1.4;">
                    üí° <strong>–ö–∞–∫ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è:</strong><br>
                    1. –ù–∞–∂–º–∏—Ç–µ "–í—ã–¥–µ–ª–∏—Ç—å –≤–µ—Å—å —Ç–µ–∫—Å—Ç"<br>
                    2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç (Ctrl+C)<br>
                    3. –í—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ—Å—Ç –í–ö –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
                </p>
            </div>
            
            <button id="close-share-modal" style="
                width: 100%;
                padding: 12px;
                background: #6b7280;
                color: white;
                border: none;
                border-radius: 10px;
                font-size: 16px;
                cursor: pointer;
            ">
                –ó–∞–∫—Ä—ã—Ç—å
            </button>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        const style = document.createElement('style');
        style.textContent = `
            @keyframes fadeIn {
                from { opacity: 0; }
                to { opacity: 1; }
            }
            @keyframes slideIn {
                from { transform: translateY(-50px); opacity: 0; }
                to { transform: translateY(0); opacity: 1; }
            }
            @keyframes fadeOut {
                from { opacity: 1; }
                to { opacity: 0; }
            }
        `;
        document.head.appendChild(style);
        
        modal.appendChild(dialog);
        document.body.appendChild(modal);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const textarea = dialog.querySelector('#share-text');
        const selectButton = dialog.querySelector('#select-all-text');
        const downloadButton = dialog.querySelector('#download-image');
        const closeButton = dialog.querySelector('#close-share-modal');
        
        selectButton.onclick = () => {
            textarea.select();
            textarea.setSelectionRange(0, 99999); // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
            
            // –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ —Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥
            try {
                document.execCommand('copy');
                showSuccessMessage('‚úÖ –¢–µ–∫—Å—Ç –≤—ã–¥–µ–ª–µ–Ω –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!');
            } catch (err) {
                showSuccessMessage('üìù –¢–µ–∫—Å—Ç –≤—ã–¥–µ–ª–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è');
            }
        };
        
        downloadButton.onclick = () => {
            generateAndDownloadImage(results);
        };
        
        closeButton.onclick = closeModal;
        
        modal.onclick = (e) => {
            if (e.target === modal) closeModal();
        };
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
        setTimeout(() => {
            textarea.focus();
            textarea.select();
        }, 500);
        
        function closeModal() {
            modal.style.animation = 'fadeOut 0.3s ease';
            setTimeout(() => {
                if (modal.parentNode) {
                    modal.parentNode.removeChild(modal);
                }
                if (style.parentNode) {
                    style.parentNode.removeChild(style);
                }
            }, 300);
        }
    }
    
    function generateAndDownloadImage(results) {
        console.log('üñºÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...');
        
        try {
            // –°–æ–∑–¥–∞–µ–º canvas –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            
            // –†–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            canvas.width = 800;
            canvas.height = 600;
            
            // –§–æ–Ω —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º
            const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);
            gradient.addColorStop(0, '#667eea');
            gradient.addColorStop(1, '#764ba2');
            ctx.fillStyle = gradient;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Å–ª–æ–π
            ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —à—Ä–∏—Ñ—Ç–∞
            ctx.textAlign = 'center';
            ctx.fillStyle = 'white';
            
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫
            ctx.font = 'bold 48px Arial';
            ctx.fillText('üë®‚Äç‚öïÔ∏è –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–≤–∏–∑', canvas.width / 2, 100);
            
            // –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            ctx.font = 'bold 120px Arial';
            ctx.fillText(`${results.percentage}%`, canvas.width / 2, 250);
            
            // –î–µ—Ç–∞–ª–∏
            ctx.font = '32px Arial';
            ctx.fillText(`–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${results.correct} –∏–∑ ${results.total}`, canvas.width / 2, 320);
            
            // –û—Ü–µ–Ω–∫–∞
            const grade = getGrade(results.percentage);
            ctx.font = 'bold 36px Arial';
            ctx.fillText(grade, canvas.width / 2, 380);
            
            // –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
            ctx.font = '24px Arial';
            const motivationText = getMotivationText(results.percentage);
            wrapText(ctx, motivationText, canvas.width / 2, 450, 600, 30);
            
            // –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
            ctx.font = '20px Arial';
            ctx.fillText('ü©∫ –ê —Ç—ã —Å–º–æ–∂–µ—à—å –ª—É—á—à–µ? –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è!', canvas.width / 2, 520);
            
            // URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            ctx.font = '16px Arial';
            ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';
            ctx.fillText('–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–≤–∏–∑ –í–ö', canvas.width / 2, 560);
            
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å–∫–∞—á–∏–≤–∞–µ–º
            canvas.toBlob((blob) => {
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `medical-quiz-result-${results.percentage}%.png`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
                
                showSuccessMessage('üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!');
            }, 'image/png');
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
            showSuccessMessage('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ canvas
    function wrapText(context, text, x, y, maxWidth, lineHeight) {
        const words = text.split(' ');
        let line = '';
        
        for (let n = 0; n < words.length; n++) {
            const testLine = line + words[n] + ' ';
            const metrics = context.measureText(testLine);
            const testWidth = metrics.width;
            
            if (testWidth > maxWidth && n > 0) {
                context.fillText(line, x, y);
                line = words[n] + ' ';
                y += lineHeight;
            } else {
                line = testLine;
            }
        }
        context.fillText(line, x, y);
    }
    
    function getResults() {
        try {
            // –°–ø–æ—Å–æ–± 1: –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            const percentageEl = document.getElementById('percentage');
            const correctEl = document.getElementById('correct-answers');
            const totalEl = document.getElementById('total-questions-result');
            
            if (percentageEl && correctEl && totalEl) {
                return {
                    percentage: parseInt(percentageEl.textContent) || 0,
                    correct: parseInt(correctEl.textContent) || 0,
                    total: parseInt(totalEl.textContent) || 0,
                    method: 'direct'
                };
            }
            
            // –°–ø–æ—Å–æ–± 2: –ü–æ–∏—Å–∫ –≤ —Ç–µ–∫—Å—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            const pageText = document.body.textContent || '';
            const percentMatch = pageText.match(/(\d+)%/g);
            const scoreMatch = pageText.match(/(\d+)\s*–∏–∑\s*(\d+)/g);
            
            if (percentMatch && scoreMatch) {
                const percentage = parseInt(percentMatch[percentMatch.length - 1]);
                const lastScore = scoreMatch[scoreMatch.length - 1];
                const scoreNumbers = lastScore.match(/(\d+)\s*–∏–∑\s*(\d+)/);
                
                if (scoreNumbers) {
                    return {
                        percentage: percentage,
                        correct: parseInt(scoreNumbers[1]),
                        total: parseInt(scoreNumbers[2]),
                        method: 'text'
                    };
                }
            }
            
            return null;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', error);
            return null;
        }
    }
    
    function createShareMessage(results) {
        const emoji = getEmoji(results.percentage);
        const grade = getGrade(results.percentage);
        
        let message = `${emoji} ${grade}! –ü—Ä–æ—à–µ–ª –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–≤–∏–∑ –∏ –Ω–∞–±—Ä–∞–ª ${results.percentage}%!\n\n`;
        message += `‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${results.correct} –∏–∑ ${results.total}\n\n`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        message += getMotivationText(results.percentage) + '\n\n';
        
        message += `ü©∫ –ê —Ç—ã —Å–º–æ–∂–µ—à—å –ª—É—á—à–µ? –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è!\n\n`;
        message += `#–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π–∫–≤–∏–∑ #–º–µ–¥–∏—Ü–∏–Ω–∞ #—Ç–µ—Å—Ç`;
        
        return message;
    }
    
    function getEmoji(percentage) {
        if (percentage >= 95) return 'üèÜ';
        if (percentage >= 85) return 'üåü';
        if (percentage >= 75) return 'üëè';
        if (percentage >= 60) return 'üëç';
        if (percentage >= 50) return 'üìö';
        return 'üí™';
    }
    
    function getGrade(percentage) {
        if (percentage >= 95) return '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ';
        if (percentage >= 85) return '–û—Ç–ª–∏—á–Ω–æ';
        if (percentage >= 75) return '–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ';
        if (percentage >= 60) return '–•–æ—Ä–æ—à–æ';
        if (percentage >= 50) return '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ';
        return '–ï—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏';
    }
    
    function getMotivationText(percentage) {
        if (percentage >= 90) {
            return 'üèÜ –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ù–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª!';
        } else if (percentage >= 70) {
            return 'üëè –•–æ—Ä–æ—à–∏–π —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π!';
        } else if (percentage >= 50) {
            return 'üìö –ï—Å—Ç—å –±–∞–∑–∞, –Ω–æ –º–æ–∂–Ω–æ –µ—â–µ –ø–æ–¥—É—á–∏—Ç—å—Å—è!';
        } else {
            return 'üí™ –ù–∞—á–∞–ª–æ –ø–æ–ª–æ–∂–µ–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–∑—É—á–∞—Ç—å –º–µ–¥–∏—Ü–∏–Ω—É!';
        }
    }
    
    function showSimpleAlert(message) {
        alert(message);
    }
    
    function showSuccessMessage(text) {
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: #10B981;
            color: white;
            padding: 15px 20px;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 500;
            z-index: 10001;
            box-shadow: 0 4px 20px rgba(16, 185, 129, 0.4);
            max-width: 300px;
            line-height: 1.4;
            animation: slideInRight 0.3s ease;
        `;
        
        notification.textContent = text;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
        if (!document.getElementById('notification-styles')) {
            const style = document.createElement('style');
            style.id = 'notification-styles';
            style.textContent = `
                @keyframes slideInRight {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
                @keyframes slideOutRight {
                    from { transform: translateX(0); opacity: 1; }
                    to { transform: translateX(100%); opacity: 0; }
                }
            `;
            document.head.appendChild(style);
        }
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.style.animation = 'slideOutRight 0.3s ease';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 300);
        }, 4000);
    }
    
    // –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —à–µ—Ä–∏–Ω–≥
    function giveShareReward() {
        if (window.Gamification && window.Gamification.stats) {
            const stats = window.Gamification.stats;
            
            if (!stats.achievements.includes('social')) {
                stats.achievements.push('social');
                setTimeout(() => {
                    if (window.Gamification.showAchievement) {
                        window.Gamification.showAchievement('–°–æ—Ü–∏–∞–ª—å–Ω—ã–π: –ø–æ–¥–µ–ª–∏–ª—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º! üì§');
                    }
                }, 1000);
                if (window.Gamification.saveStats) {
                    window.Gamification.saveStats();
                }
            }
        }
    }
    
    // –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    window.debugSimpleShare = {
        testShare: () => {
            console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —à–µ—Ä–∏–Ω–≥...');
            shareResultsSimple();
        },
        
        getResults: () => {
            const results = getResults();
            console.log('üìä –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:', results);
            return results;
        }
    };
    
    console.log('‚úÖ –ü—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ —à–µ—Ä–∏–Ω–≥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ');
    console.log('üêõ –î–æ—Å—Ç—É–ø–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏: window.debugSimpleShare');
    
})();
